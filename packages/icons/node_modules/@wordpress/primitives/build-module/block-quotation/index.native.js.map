{"version":3,"sources":["@wordpress/primitives/src/block-quotation/index.native.js"],"names":["View","Children","cloneElement","withPreferredColorScheme","styles","BlockQuotation","props","getStylesFromColorScheme","blockQuoteStyle","wpBlockQuoteLight","wpBlockQuoteDark","newChildren","map","children","child","identifier","style","wpBlockQuoteCitation","tagsToEliminate"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,QAAqB,cAArB;AACA;;;;AAGA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,oBAAvC;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA;;;;AAGA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,IAAMC,cAAc,GAAGF,wBAAwB,CAAE,UAAEG,KAAF,EAAa;AAAA,MAC5DC,wBAD4D,GAC/BD,KAD+B,CAC5DC,wBAD4D;AAGpE,MAAMC,eAAe,GAAGD,wBAAwB,CAC/CH,MAAM,CAACK,iBADwC,EAE/CL,MAAM,CAACM,gBAFwC,CAAhD;AAIA,MAAMC,WAAW,GAAGV,QAAQ,CAACW,GAAT,CAAcN,KAAK,CAACO,QAApB,EAA8B,UAAEC,KAAF,EAAa;AAC9D,QAAKA,KAAK,IAAIA,KAAK,CAACR,KAAN,CAAYS,UAAZ,KAA2B,UAAzC,EAAsD;AACrD,aAAOb,YAAY,CAAEY,KAAF,EAAS;AAC3BE,QAAAA,KAAK,EAAEZ,MAAM,CAACa;AADa,OAAT,CAAnB;AAGA;;AACD,QAAKH,KAAK,IAAIA,KAAK,CAACR,KAAN,CAAYS,UAAZ,KAA2B,OAAzC,EAAmD;AAClD,aAAOb,YAAY,CAAEY,KAAF,EAAS;AAAEI,QAAAA,eAAe,EAAE,CAAE,KAAF;AAAnB,OAAT,CAAnB;AACA;;AACD,WAAOJ,KAAP;AACA,GAVmB,CAApB;AAWA,SAAO,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGN;AAAd,KAAkCG,WAAlC,CAAP;AACA,CAnBqD,CAA/C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { Children, cloneElement } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nexport const BlockQuotation = withPreferredColorScheme( ( props ) => {\n\tconst { getStylesFromColorScheme } = props;\n\n\tconst blockQuoteStyle = getStylesFromColorScheme(\n\t\tstyles.wpBlockQuoteLight,\n\t\tstyles.wpBlockQuoteDark\n\t);\n\tconst newChildren = Children.map( props.children, ( child ) => {\n\t\tif ( child && child.props.identifier === 'citation' ) {\n\t\t\treturn cloneElement( child, {\n\t\t\t\tstyle: styles.wpBlockQuoteCitation,\n\t\t\t} );\n\t\t}\n\t\tif ( child && child.props.identifier === 'value' ) {\n\t\t\treturn cloneElement( child, { tagsToEliminate: [ 'div' ] } );\n\t\t}\n\t\treturn child;\n\t} );\n\treturn <View style={ blockQuoteStyle }>{ newChildren }</View>;\n} );\n"]}