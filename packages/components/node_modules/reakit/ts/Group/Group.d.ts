/// <reference types="react" />
import { BoxOptions, BoxHTMLProps } from "../Box/Box";
export declare type GroupOptions = BoxOptions;
export declare type GroupHTMLProps = BoxHTMLProps;
export declare type GroupProps = GroupOptions & GroupHTMLProps;
export declare const useGroup: {
    (options?: BoxOptions | undefined, htmlProps?: BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): BoxHTMLProps;
    unstable_propsAreEqual: (prev: BoxOptions & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }, next: BoxOptions & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }) => boolean;
    __keys: readonly any[];
    __useOptions: (options: BoxOptions, htmlProps: BoxHTMLProps) => BoxOptions;
};
export declare const Group: import("reakit-system/src/createComponent").Component<"div", BoxOptions>;
