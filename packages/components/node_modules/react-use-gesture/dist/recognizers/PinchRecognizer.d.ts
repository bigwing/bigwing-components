import { TouchEvent, WheelEvent } from 'react';
import DistanceAngleRecognizer from './DistanceAngleRecognizer';
import Controller from '../Controller';
import { IngKey, WebKitGestureEvent } from '../types';
export default class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {
    ingKey: IngKey;
    constructor(controller: Controller, args: any[]);
    private pinchShouldStart;
    onPinchStart: (event: TouchEvent<Element>) => void;
    onPinchChange: (event: TouchEvent<Element>) => void;
    onPinchEnd: (event: import("react").MouseEvent<Element, MouseEvent> | TouchEvent<Element> | WheelEvent<Element> | import("react").PointerEvent<Element> | WebKitGestureEvent) => void;
    onCancel: () => void;
    /**
     * PINCH WITH WEBKIT GESTURES
     */
    onGestureStart: (event: WebKitGestureEvent) => void;
    onGestureChange: (event: WebKitGestureEvent) => void;
    onGestureEnd: (event: WebKitGestureEvent) => void;
    updateTouchData: (event: TouchEvent<Element>) => void;
    /**
     * PINCH WITH WHEEL
     */
    private wheelShouldRun;
    private getWheelValuesFromEvent;
    onWheel: (event: WheelEvent<Element>) => void;
    onWheelStart: (event: WheelEvent<Element>) => void;
    onWheelChange: (event: WheelEvent<Element>) => void;
    onWheelEnd: () => void;
    addBindings(): void;
}
