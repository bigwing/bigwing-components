import { PointerEvent } from 'react';
import CoordinatesRecognizer from './CoordinatesRecognizer';
import Controller from '../Controller';
import { UseGestureEvent, IngKey } from '../types';
export default class DragRecognizer extends CoordinatesRecognizer<'drag'> {
    ingKey: IngKey;
    wasTouch: boolean;
    constructor(controller: Controller, args: any[]);
    private isEventTypeTouch;
    private dragShouldStart;
    private setPointers;
    private removePointers;
    private setListeners;
    onDragStart: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    startDrag(event: UseGestureEvent): void;
    onDragChange: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    onDragEnd: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    clean: () => void;
    onCancel: () => void;
    addBindings(): void;
}
