/// <reference types="react" />
import CoordinatesRecognizer from './CoordinatesRecognizer';
import Controller from '../Controller';
import { IngKey } from '../types';
export default class MoveRecognizer extends CoordinatesRecognizer<'move'> {
    ingKey: IngKey;
    debounced: boolean;
    constructor(controller: Controller, args: any[]);
    private moveShouldRun;
    onMove: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    onMoveStart: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    onMoveChange: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    onMoveEnd: () => void;
    onPointerEnter: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    onPointerLeave: (event: import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").WebKitGestureEvent) => void;
    addBindings(): void;
}
