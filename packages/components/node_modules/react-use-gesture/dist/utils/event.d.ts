/// <reference types="react" />
import { Fn, EventOptions, UseGestureEvent, Vector2, WebKitGestureEvent } from '../types';
export declare const supportsTouchEvents: () => boolean;
/**
 * Whether the browser supports GestureEvent (ie Safari)
 * @returns true if the browser supports gesture event
 */
export declare function supportsGestureEvents(): boolean;
export declare const addListeners: (el: EventTarget, listeners: [string, Fn][], options: EventOptions) => void;
export declare const removeListeners: (el: EventTarget, listeners: [string, Fn][], options: EventOptions) => void;
interface ModifierKeys {
    shiftKey: boolean;
    altKey: boolean;
    metaKey: boolean;
    ctrlKey: boolean;
}
/**
 * Gets modifier keys from event
 * @param event
 * @returns modifier keys
 */
export declare function getModifierKeys(event: UseGestureEvent): ModifierKeys;
export declare function getGenericEventData(event: React.MouseEvent | React.TouchEvent | React.PointerEvent): {
    shiftKey: boolean;
    altKey: boolean;
    metaKey: boolean;
    ctrlKey: boolean;
    touches: number;
    down: boolean;
    buttons: number;
};
declare type Values = {
    values: Vector2;
};
/**
 * Gets scroll event values
 * @param event
 * @returns scroll event values
 */
export declare function getScrollEventValues(event: UseGestureEvent): Values;
/**
 * Gets wheel event values.
 * @param event
 * @returns wheel event values
 */
export declare function getWheelEventValues(event: UseGestureEvent<React.WheelEvent>): Values;
/**
 * Gets pointer event values.
 * @param event
 * @returns pointer event values
 */
export declare function getPointerEventValues(event: React.MouseEvent | React.TouchEvent | React.PointerEvent): Values;
/**
 * Gets webkit gesture event values.
 * @param event
 * @returns webkit gesture event values
 */
export declare function getWebkitGestureEventValues(event: WebKitGestureEvent): Values;
/**
 * Gets two touches event data
 * @param event
 * @returns two touches event data
 */
export declare function getTwoTouchesEventData(event: React.TouchEvent): {
    values: import("../types").Tuple<number>;
    origin: import("../types").Tuple<number>;
};
export {};
