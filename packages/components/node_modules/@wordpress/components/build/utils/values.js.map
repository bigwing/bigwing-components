{"version":3,"sources":["@wordpress/components/src/utils/values.js"],"names":["isValueDefined","value","undefined","isValueEmpty","isEmptyString","getDefinedValue","values","fallbackValue","find"],"mappings":";;;;;;;;;AAAA;;;;;;AAMO,SAASA,cAAT,CAAyBC,KAAzB,EAAiC;AACvC,SAAOA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAxC;AACA;AAED;;;;;;;;AAMO,SAASE,YAAT,CAAuBF,KAAvB,EAA+B;AACrC,MAAMG,aAAa,GAAGH,KAAK,KAAK,EAAhC;AAEA,SAAO,CAAED,cAAc,CAAEC,KAAF,CAAhB,IAA6BG,aAApC;AACA;AAED;;;;;;;;;AAOO,SAASC,eAAT,GAAuD;AAAA;;AAAA,MAA7BC,MAA6B,uEAApB,EAAoB;AAAA,MAAhBC,aAAgB;AAC7D,yBAAOD,MAAM,CAACE,IAAP,CAAaR,cAAb,CAAP,uDAAwCO,aAAxC;AACA","sourcesContent":["/**\n * Determines if a value is null or undefined.\n *\n * @param {any} value The value to check.\n * @return {boolean} Whether value is null or undefined.\n */\nexport function isValueDefined( value ) {\n\treturn value !== undefined && value !== null;\n}\n\n/**\n * Determines if a value is empty, null, or undefined.\n *\n * @param {any} value The value to check.\n * @return {boolean} Whether value is empty.\n */\nexport function isValueEmpty( value ) {\n\tconst isEmptyString = value === '';\n\n\treturn ! isValueDefined( value ) || isEmptyString;\n}\n\n/**\n * Attempts to get a defined/non-null value from a collection of arguments.\n *\n * @param {Array<any>} values Values to derive from.\n * @param {any} fallbackValue Fallback value if there are no defined values.\n * @return {any} A defined value or the fallback value.\n */\nexport function getDefinedValue( values = [], fallbackValue ) {\n\treturn values.find( isValueDefined ) ?? fallbackValue;\n}\n"]}