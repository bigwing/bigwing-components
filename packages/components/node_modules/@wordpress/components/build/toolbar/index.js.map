{"version":3,"sources":["@wordpress/components/src/toolbar/index.js"],"names":["Toolbar","ref","className","__experimentalAccessibilityLabel","props"],"mappings":";;;;;;;;;AAQA;;;;;;AALA;;AAUA;;AACA;;AAdA;;;;AAKA;;;;AAKA;;;;AAMA;;;;;;;;;;AAUA,SAASA,OAAT,OAECC,GAFD,EAGE;AAAA,MAFCC,SAED,QAFCA,SAED;AAAA,MAFYC,gCAEZ,QAFYA,gCAEZ;AAAA,MAFiDC,KAEjD;;AACD,MAAKD,gCAAL,EAAwC;AACvC,WACC,4BAAC,yBAAD,CACC;AADD;AAEC,MAAA,SAAS,EAAG,yBACX,+BADW,EAEXD,SAFW,CAFb;AAMC,MAAA,kBAAkB,EAAGC,gCANtB;AAOC,MAAA,GAAG,EAAGF;AAPP,OAQMG,KARN,EADD;AAYA,GAdA,CAeD;AACA;AACA;AACA;;;AACA,SAAO,4BAAC,qBAAD,6BAAmBA,KAAnB;AAA2B,IAAA,SAAS,EAAGF;AAAvC,KAAP;AACA;;eAEc,yBAAYF,OAAZ,C","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ToolbarGroup from '../toolbar-group';\nimport ToolbarContainer from './toolbar-container';\n\n/**\n * Renders a toolbar.\n *\n * To add controls, simply pass `ToolbarButton` components as children.\n *\n * @param {Object} props                                    Component props.\n * @param {string} [props.className]                        Class to set on the container div.\n * @param {string} [props.__experimentalAccessibilityLabel] ARIA label for toolbar container.\n * @param {Object} ref                                      React Element ref.\n */\nfunction Toolbar(\n\t{ className, __experimentalAccessibilityLabel, ...props },\n\tref\n) {\n\tif ( __experimentalAccessibilityLabel ) {\n\t\treturn (\n\t\t\t<ToolbarContainer\n\t\t\t\t// `ToolbarGroup` already uses components-toolbar for compatibility reasons\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'components-accessible-toolbar',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\taccessibilityLabel={ __experimentalAccessibilityLabel }\n\t\t\t\tref={ ref }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t);\n\t}\n\t// When the __experimentalAccessibilityLabel prop is not passed, Toolbar will\n\t// fallback to ToolbarGroup. This should be deprecated as soon as the new API\n\t// gets stable.\n\t// See https://github.com/WordPress/gutenberg/pull/20008#issuecomment-624503410\n\treturn <ToolbarGroup { ...props } className={ className } />;\n}\n\nexport default forwardRef( Toolbar );\n"]}