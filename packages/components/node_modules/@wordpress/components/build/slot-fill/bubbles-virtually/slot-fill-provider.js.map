{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot-fill-provider.js"],"names":["useSlotRegistry","slots","setSlots","fills","setFills","registerSlot","name","ref","fillProps","prevSlots","slot","unregisterSlot","nextSlots","updateSlot","slotFills","map","fill","current","rerender","registerFill","prevFills","unregisterFill","filter","fillRef","registry","SlotFillProvider","children"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useState } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction useSlotRegistry() {\n\tconst [ slots, setSlots ] = useState( {} );\n\tconst [ fills, setFills ] = useState( {} );\n\n\tconst registerSlot = useCallback( ( name, ref, fillProps ) => {\n\t\tsetSlots( ( prevSlots ) => {\n\t\t\tconst slot = prevSlots[ name ] || {};\n\t\t\treturn {\n\t\t\t\t...prevSlots,\n\t\t\t\t[ name ]: {\n\t\t\t\t\t...slot,\n\t\t\t\t\tref: ref || slot.ref,\n\t\t\t\t\tfillProps: fillProps || slot.fillProps || {},\n\t\t\t\t},\n\t\t\t};\n\t\t} );\n\t}, [] );\n\n\tconst unregisterSlot = useCallback( ( name, ref ) => {\n\t\tsetSlots( ( prevSlots ) => {\n\t\t\tconst { [ name ]: slot, ...nextSlots } = prevSlots;\n\t\t\t// Make sure we're not unregistering a slot registered by another element\n\t\t\t// See https://github.com/WordPress/gutenberg/pull/19242#issuecomment-590295412\n\t\t\tif ( slot?.ref === ref ) {\n\t\t\t\treturn nextSlots;\n\t\t\t}\n\t\t\treturn prevSlots;\n\t\t} );\n\t}, [] );\n\n\tconst updateSlot = useCallback(\n\t\t( name, fillProps ) => {\n\t\t\tconst slot = slots[ name ];\n\t\t\tif ( ! slot ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ! isShallowEqual( slot.fillProps, fillProps ) ) {\n\t\t\t\tslot.fillProps = fillProps;\n\t\t\t\tconst slotFills = fills[ name ];\n\t\t\t\tif ( slotFills ) {\n\t\t\t\t\t// Force update fills\n\t\t\t\t\tslotFills.map( ( fill ) => fill.current.rerender() );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[ slots, fills ]\n\t);\n\n\tconst registerFill = useCallback( ( name, ref ) => {\n\t\tsetFills( ( prevFills ) => ( {\n\t\t\t...prevFills,\n\t\t\t[ name ]: [ ...( prevFills[ name ] || [] ), ref ],\n\t\t} ) );\n\t}, [] );\n\n\tconst unregisterFill = useCallback( ( name, ref ) => {\n\t\tsetFills( ( prevFills ) => {\n\t\t\tif ( prevFills[ name ] ) {\n\t\t\t\treturn {\n\t\t\t\t\t...prevFills,\n\t\t\t\t\t[ name ]: prevFills[ name ].filter(\n\t\t\t\t\t\t( fillRef ) => fillRef !== ref\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn prevFills;\n\t\t} );\n\t}, [] );\n\n\t// Memoizing the return value so it can be directly passed to Provider value\n\tconst registry = useMemo(\n\t\t() => ( {\n\t\t\tslots,\n\t\t\tfills,\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t} ),\n\t\t[\n\t\t\tslots,\n\t\t\tfills,\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t]\n\t);\n\n\treturn registry;\n}\n\nexport default function SlotFillProvider( { children } ) {\n\tconst registry = useSlotRegistry();\n\treturn (\n\t\t<SlotFillContext.Provider value={ registry }>\n\t\t\t{ children }\n\t\t</SlotFillContext.Provider>\n\t);\n}\n"]}