{"version":3,"sources":["@wordpress/components/src/navigable-container/menu.js"],"names":["NavigableMenu","ref","role","orientation","rest","eventToOffset","evt","keyCode","next","DOWN","previous","UP","RIGHT","LEFT"],"mappings":";;;;;;;;;;AAQA;;;;;;AALA;;AAMA;;AAKA;;AAdA;;;;AAKA;;;;AAMA;;;AAKO,SAASA,aAAT,OAENC,GAFM,EAGL;AAAA,uBAFCC,IAED;AAAA,MAFCA,IAED,0BAFQ,MAER;AAAA,8BAFgBC,WAEhB;AAAA,MAFgBA,WAEhB,iCAF8B,UAE9B;AAAA,MAF6CC,IAE7C;;AACD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,GAAF,EAAW;AAAA,QACxBC,OADwB,GACZD,GADY,CACxBC,OADwB;AAGhC,QAAIC,IAAI,GAAG,CAAEC,cAAF,CAAX;AACA,QAAIC,QAAQ,GAAG,CAAEC,YAAF,CAAf;;AAEA,QAAKR,WAAW,KAAK,YAArB,EAAoC;AACnCK,MAAAA,IAAI,GAAG,CAAEI,eAAF,CAAP;AACAF,MAAAA,QAAQ,GAAG,CAAEG,cAAF,CAAX;AACA;;AAED,QAAKV,WAAW,KAAK,MAArB,EAA8B;AAC7BK,MAAAA,IAAI,GAAG,CAAEI,eAAF,EAASH,cAAT,CAAP;AACAC,MAAAA,QAAQ,GAAG,CAAEG,cAAF,EAAQF,YAAR,CAAX;AACA;;AAED,QAAK,sBAAUH,IAAV,EAAgBD,OAAhB,CAAL,EAAiC;AAChC,aAAO,CAAP;AACA,KAFD,MAEO,IAAK,sBAAUG,QAAV,EAAoBH,OAApB,CAAL,EAAqC;AAC3C,aAAO,CAAC,CAAR;AACA,KAFM,MAEA,IAAK,sBAAU,CAAEE,cAAF,EAAQE,YAAR,EAAYE,cAAZ,EAAkBD,eAAlB,CAAV,EAAqCL,OAArC,CAAL,EAAsD;AAC5D;AACA;AACA;AACA,aAAO,CAAP;AACA;AACD,GA1BD;;AA4BA,SACC,4BAAC,kBAAD;AACC,IAAA,GAAG,EAAGN,GADP;AAEC,IAAA,oBAAoB,MAFrB;AAGC,IAAA,mBAAmB,EAAG,KAHvB;AAIC,IAAA,IAAI,EAAGC,IAJR;AAKC,wBAAmBA,IAAI,KAAK,cAAT,GAA0B,IAA1B,GAAiCC,WALrD;AAMC,IAAA,aAAa,EAAGE;AANjB,KAOMD,IAPN,EADD;AAWA;;eAEc,yBAAYJ,aAAZ,C","sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { UP, DOWN, LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport NavigableContainer from './container';\n\nexport function NavigableMenu(\n\t{ role = 'menu', orientation = 'vertical', ...rest },\n\tref\n) {\n\tconst eventToOffset = ( evt ) => {\n\t\tconst { keyCode } = evt;\n\n\t\tlet next = [ DOWN ];\n\t\tlet previous = [ UP ];\n\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\tnext = [ RIGHT ];\n\t\t\tprevious = [ LEFT ];\n\t\t}\n\n\t\tif ( orientation === 'both' ) {\n\t\t\tnext = [ RIGHT, DOWN ];\n\t\t\tprevious = [ LEFT, UP ];\n\t\t}\n\n\t\tif ( includes( next, keyCode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( includes( previous, keyCode ) ) {\n\t\t\treturn -1;\n\t\t} else if ( includes( [ DOWN, UP, LEFT, RIGHT ], keyCode ) ) {\n\t\t\t// Key press should be handled, e.g. have event propagation and\n\t\t\t// default behavior handled by NavigableContainer but not result\n\t\t\t// in an offset.\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\treturn (\n\t\t<NavigableContainer\n\t\t\tref={ ref }\n\t\t\tstopNavigationEvents\n\t\t\tonlyBrowserTabstops={ false }\n\t\t\trole={ role }\n\t\t\taria-orientation={ role === 'presentation' ? null : orientation }\n\t\t\teventToOffset={ eventToOffset }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n}\n\nexport default forwardRef( NavigableMenu );\n"]}