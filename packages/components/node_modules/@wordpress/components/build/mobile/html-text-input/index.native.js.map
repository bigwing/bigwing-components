{"version":3,"sources":["@wordpress/components/src/mobile/html-text-input/index.native.js"],"names":["HTMLTextInput","arguments","edit","bind","stopEditing","getHTMLForParent","state","html","props","onChange","setState","value","isDirty","onPersist","getStylesFromColorScheme","htmlStyle","styles","htmlView","htmlViewDark","placeholderStyle","placeholder","placeholderDark","parentHeight","htmlViewTitle","title","color","editTitle","HTMLInputContainer","scrollEnabled","Component","select","getEditedPostAttribute","getEditedPostContent","dispatch","editPost","resetEditorBlocks","content","blocks","withInstanceId","withPreferredColorScheme"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TextInput } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { addFilter, removeFilter } from '@wordpress/hooks';\nimport {\n\twithInstanceId,\n\tcompose,\n\twithPreferredColorScheme,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport HTMLInputContainer from './container';\nimport styles from './style.scss';\n\nexport class HTMLTextInput extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\t\tthis.getHTMLForParent = this.getHTMLForParent.bind( this );\n\t\taddFilter(\n\t\t\t'native.persist-html',\n\t\t\t'html-text-input',\n\t\t\tthis.getHTMLForParent\n\t\t);\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tremoveFilter( 'native.persist-html', 'html-text-input' );\n\t\t//TODO: Blocking main thread\n\t\tthis.stopEditing();\n\t}\n\n\tedit( html ) {\n\t\tthis.props.onChange( html );\n\t\tthis.setState( { value: html, isDirty: true } );\n\t}\n\n\tgetHTMLForParent() {\n\t\treturn this.state.value;\n\t}\n\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { getStylesFromColorScheme } = this.props;\n\t\tconst htmlStyle = getStylesFromColorScheme(\n\t\t\tstyles.htmlView,\n\t\t\tstyles.htmlViewDark\n\t\t);\n\t\tconst placeholderStyle = getStylesFromColorScheme(\n\t\t\tstyles.placeholder,\n\t\t\tstyles.placeholderDark\n\t\t);\n\t\treturn (\n\t\t\t<HTMLInputContainer parentHeight={ this.props.parentHeight }>\n\t\t\t\t<TextInput\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\taccessibilityLabel=\"html-view-title\"\n\t\t\t\t\ttextAlignVertical=\"center\"\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ styles.htmlViewTitle }\n\t\t\t\t\tvalue={ this.props.title }\n\t\t\t\t\tplaceholder={ __( 'Add title' ) }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\tonChangeText={ this.props.editTitle }\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\taccessibilityLabel=\"html-view-content\"\n\t\t\t\t\ttextAlignVertical=\"top\"\n\t\t\t\t\tmultiline\n\t\t\t\t\tstyle={ htmlStyle }\n\t\t\t\t\tvalue={ this.state.value }\n\t\t\t\t\tonChangeText={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tplaceholder={ __( 'Start writingâ€¦' ) }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\tscrollEnabled={ HTMLInputContainer.scrollEnabled }\n\t\t\t\t/>\n\t\t\t</HTMLInputContainer>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getEditedPostContent } = select(\n\t\t\t'core/editor'\n\t\t);\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tvalue: getEditedPostContent(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\tonChange( content ) {\n\t\t\t\teditPost( { content } );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tresetEditorBlocks( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithPreferredColorScheme,\n] )( HTMLTextInput );\n"]}