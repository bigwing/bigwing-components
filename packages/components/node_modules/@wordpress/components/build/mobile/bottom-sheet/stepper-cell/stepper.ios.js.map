{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/stepper-cell/stepper.ios.js"],"names":["Stepper","getStylesFromColorScheme","isMaxValue","isMinValue","onPressInDecrement","onPressInIncrement","onPressOut","value","valueStyle","styles","valueTextDark","buttonStyle","button","buttonDark","container","opacity","minus","color","plus"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AAKA;;AAdA;;;;AAKA;;;;AAMA;;;AAKA,SAASA,OAAT,OAQI;AAAA,MAPHC,wBAOG,QAPHA,wBAOG;AAAA,MANHC,UAMG,QANHA,UAMG;AAAA,MALHC,UAKG,QALHA,UAKG;AAAA,MAJHC,kBAIG,QAJHA,kBAIG;AAAA,MAHHC,kBAGG,QAHHA,kBAGG;AAAA,MAFHC,UAEG,QAFHA,UAEG;AAAA,MADHC,KACG,QADHA,KACG;AACH,MAAMC,UAAU,GAAGP,wBAAwB,CAC1CQ,eAAOF,KADmC,EAE1CE,eAAOC,aAFmC,CAA3C;AAIA,MAAMC,WAAW,GAAGV,wBAAwB,CAC3CQ,eAAOG,MADoC,EAE3CH,eAAOI,UAFoC,CAA5C;AAKA,SACC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGJ,eAAOK;AAArB,KACC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGN;AAAd,KAA6BD,KAA7B,CADD,EAEC,4BAAC,6BAAD;AACC,IAAA,QAAQ,EAAGJ,UADZ;AAEC,IAAA,SAAS,EAAGC,kBAFb;AAGC,IAAA,UAAU,EAAGE,UAHd;AAIC,IAAA,KAAK,EAAG,CAAEK,WAAF,EAAeR,UAAU,GAAG;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAsB,IAA/C;AAJT,KAMC,4BAAC,WAAD;AAAM,IAAA,IAAI,EAAGC,YAAb;AAAqB,IAAA,IAAI,EAAG,EAA5B;AAAiC,IAAA,KAAK,EAAGL,WAAW,CAACM;AAArD,IAND,CAFD,EAUC,4BAAC,6BAAD;AACC,IAAA,QAAQ,EAAGf,UADZ;AAEC,IAAA,SAAS,EAAGG,kBAFb;AAGC,IAAA,UAAU,EAAGC,UAHd;AAIC,IAAA,KAAK,EAAG,CAAEK,WAAF,EAAeT,UAAU,GAAG;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAsB,IAA/C;AAJT,KAMC,4BAAC,WAAD;AAAM,IAAA,IAAI,EAAGG,WAAb;AAAoB,IAAA,IAAI,EAAG,EAA3B;AAAgC,IAAA,KAAK,EAAGP,WAAW,CAACM;AAApD,IAND,CAVD,CADD;AAqBA;;eAEc,uCAA0BjB,OAA1B,C","sourcesContent":["/**\n * External dependencies\n */\nimport { Text, TouchableOpacity, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { Icon, minus, plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nfunction Stepper( {\n\tgetStylesFromColorScheme,\n\tisMaxValue,\n\tisMinValue,\n\tonPressInDecrement,\n\tonPressInIncrement,\n\tonPressOut,\n\tvalue,\n} ) {\n\tconst valueStyle = getStylesFromColorScheme(\n\t\tstyles.value,\n\t\tstyles.valueTextDark\n\t);\n\tconst buttonStyle = getStylesFromColorScheme(\n\t\tstyles.button,\n\t\tstyles.buttonDark\n\t);\n\n\treturn (\n\t\t<View style={ styles.container }>\n\t\t\t<Text style={ valueStyle }>{ value }</Text>\n\t\t\t<TouchableOpacity\n\t\t\t\tdisabled={ isMinValue }\n\t\t\t\tonPressIn={ onPressInDecrement }\n\t\t\t\tonPressOut={ onPressOut }\n\t\t\t\tstyle={ [ buttonStyle, isMinValue ? { opacity: 0.4 } : null ] }\n\t\t\t>\n\t\t\t\t<Icon icon={ minus } size={ 24 } color={ buttonStyle.color } />\n\t\t\t</TouchableOpacity>\n\t\t\t<TouchableOpacity\n\t\t\t\tdisabled={ isMaxValue }\n\t\t\t\tonPressIn={ onPressInIncrement }\n\t\t\t\tonPressOut={ onPressOut }\n\t\t\t\tstyle={ [ buttonStyle, isMaxValue ? { opacity: 0.4 } : null ] }\n\t\t\t>\n\t\t\t\t<Icon icon={ plus } size={ 24 } color={ buttonStyle.color } />\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\nexport default withPreferredColorScheme( Stepper );\n"]}