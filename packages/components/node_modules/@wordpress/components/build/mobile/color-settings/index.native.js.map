{"version":3,"sources":["@wordpress/components/src/mobile/color-settings/index.native.js"],"names":["ColorSettings","label","onColorChange","onGradientChange","colorValue","onReplaceSubsheet","shouldEnableBottomSheetScroll","shouldDisableBottomSheetMaxHeight","isBottomSheetContentScrolling","onCloseBottomSheet","onHardwareButtonPress","defaultSettings","currentValue","setCurrentValue","isCustomScreen","setIsCustomScreen","isCustomGradientScreen","setIsCustomGradientScreen","segments","colorsUtils","subsheets","isGradient","isGradientColor","selectedSegmentIndex","currentSegment","setCurrentSegment","isSolidSegment","isCustomGadientShown","horizontalSeparatorStyle","styles","horizontalSeparator","horizontalSeparatorDark","onCustomScreenToggle","onCustomGradientScreenToggle","afterHardwareButtonPress","shouldShow","onCustomPress","setColor","color","getFooter","indexOf","colorIndicator","footer","flex","selectColorText"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport { ColorControl, PanelBody } from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport ColorPicker from '../../color-picker';\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport CustomGradientPicker from '../../custom-gradient-picker';\nimport NavigationHeader from '../bottom-sheet/navigation-header';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\nimport { performLayoutAnimation } from '../layout-animation';\n\nimport styles from './style.scss';\n\nfunction ColorSettings( {\n\tlabel,\n\tonColorChange,\n\tonGradientChange,\n\tcolorValue,\n\tonReplaceSubsheet,\n\tshouldEnableBottomSheetScroll,\n\tshouldDisableBottomSheetMaxHeight,\n\tisBottomSheetContentScrolling,\n\tonCloseBottomSheet,\n\tonHardwareButtonPress,\n\tdefaultSettings,\n} ) {\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst [ isCustomScreen, setIsCustomScreen ] = useState( false );\n\tconst [ isCustomGradientScreen, setIsCustomGradientScreen ] = useState(\n\t\tfalse\n\t);\n\n\tconst { segments, subsheets, isGradient } = colorsUtils;\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\n\tuseEffect( () => {\n\t\tonHardwareButtonPress( () => {\n\t\t\tif ( isCustomScreen ) {\n\t\t\t\tonCustomScreenToggle( false );\n\t\t\t} else if ( isCustomGradientScreen ) {\n\t\t\t\tonCustomGradientScreenToggle( false );\n\t\t\t} else {\n\t\t\t\tonReplaceSubsheet(\n\t\t\t\t\tsubsheets[ 0 ],\n\t\t\t\t\t{},\n\t\t\t\t\tafterHardwareButtonPress()\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t}, [ isCustomScreen, isCustomGradientScreen ] );\n\n\tuseEffect( () => {\n\t\tperformLayoutAnimation();\n\t}, [ isCustomGadientShown ] );\n\n\tuseEffect( () => {\n\t\tsetCurrentSegment( segments[ selectedSegmentIndex ] );\n\t\tshouldDisableBottomSheetMaxHeight( true );\n\t\tonCloseBottomSheet( null );\n\t}, [] );\n\n\tfunction afterHardwareButtonPress() {\n\t\tonHardwareButtonPress( null );\n\t\tshouldDisableBottomSheetMaxHeight( true );\n\t}\n\n\tfunction onCustomScreenToggle( shouldShow ) {\n\t\tperformLayoutAnimation();\n\t\tsetIsCustomScreen( shouldShow );\n\t}\n\n\tfunction onCustomGradientScreenToggle( shouldShow ) {\n\t\tperformLayoutAnimation();\n\t\tsetIsCustomGradientScreen( shouldShow );\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tonCustomScreenToggle( true );\n\t\t} else {\n\t\t\tonCustomGradientScreenToggle( true );\n\t\t}\n\t}\n\n\tfunction setColor( color ) {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t\tonGradientChange( '' );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t\tonColorChange( '' );\n\t\t}\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Select a color' ) }\n\t\t\t\t</Text>\n\t\t\t\t<View style={ styles.flex } />\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn (\n\t\t<View renderToHardwareTextureAndroid>\n\t\t\t{ isCustomScreen && (\n\t\t\t\t<View>\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tshouldEnableBottomSheetScroll={\n\t\t\t\t\t\t\tshouldEnableBottomSheetScroll\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshouldDisableBottomSheetMaxHeight={\n\t\t\t\t\t\t\tshouldDisableBottomSheetMaxHeight\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\tactiveColor={ currentValue }\n\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t\tonNavigationBack={ () => onCustomScreenToggle( false ) }\n\t\t\t\t\t\tonCloseBottomSheet={ onCloseBottomSheet }\n\t\t\t\t\t\tisBottomSheetContentScrolling={\n\t\t\t\t\t\t\tisBottomSheetContentScrolling\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) }\n\t\t\t{ ! isCustomScreen && ! isCustomGradientScreen && (\n\t\t\t\t<View>\n\t\t\t\t\t<NavigationHeader\n\t\t\t\t\t\tscreen={ label }\n\t\t\t\t\t\tleftButtonOnPress={ () =>\n\t\t\t\t\t\t\tonReplaceSubsheet( subsheets[ 0 ] )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\tactiveColor={ currentValue }\n\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\t\t\tisCustomScreen={ isCustomScreen }\n\t\t\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\t\t\tshouldEnableBottomSheetScroll={\n\t\t\t\t\t\t\tshouldEnableBottomSheetScroll\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultSettings={ defaultSettings }\n\t\t\t\t\t/>\n\t\t\t\t\t{ isCustomGadientShown && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\t\t\tonPress={ () =>\n\t\t\t\t\t\t\t\t\t\tonCustomGradientScreenToggle( true )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t{ getFooter() }\n\t\t\t\t</View>\n\t\t\t) }\n\t\t\t{ isCustomGradientScreen && (\n\t\t\t\t<View>\n\t\t\t\t\t<NavigationHeader\n\t\t\t\t\t\tscreen={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\tleftButtonOnPress={ () =>\n\t\t\t\t\t\t\tonCustomGradientScreenToggle( false )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomGradientPicker\n\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\tcurrentValue={ currentValue }\n\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) }\n\t\t</View>\n\t);\n}\n\nexport default ColorSettings;\n"]}