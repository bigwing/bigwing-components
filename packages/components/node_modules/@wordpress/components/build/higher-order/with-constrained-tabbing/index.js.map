{"version":3,"sources":["@wordpress/components/src/higher-order/with-constrained-tabbing/index.js"],"names":["withConstrainedTabbing","WrappedComponent","arguments","focusContainRef","handleTabBehaviour","bind","event","keyCode","TAB","tabbables","focus","tabbable","find","current","length","firstTabbable","lastTabbable","shiftKey","target","preventDefault","includes","props","Component"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,sBAAsB,GAAG,yCAC9B,UAAEC,gBAAF;AAAA;AAAA;;AAAA;;AAEE,sBAAc;AAAA;;AAAA;AACb,iCAAUC,SAAV;AAEA,YAAKC,eAAL,GAAuB,yBAAvB;AACA,YAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,6CAA1B;AAJa;AAKb;;AAPH;AAAA;AAAA,yCASsBC,KATtB,EAS8B;AAC3B,YAAKA,KAAK,CAACC,OAAN,KAAkBC,aAAvB,EAA6B;AAC5B;AACA;;AAED,YAAMC,SAAS,GAAGC,WAAMC,QAAN,CAAeC,IAAf,CACjB,KAAKT,eAAL,CAAqBU,OADJ,CAAlB;;AAGA,YAAK,CAAEJ,SAAS,CAACK,MAAjB,EAA0B;AACzB;AACA;;AACD,YAAMC,aAAa,GAAGN,SAAS,CAAE,CAAF,CAA/B;AACA,YAAMO,YAAY,GAAGP,SAAS,CAAEA,SAAS,CAACK,MAAV,GAAmB,CAArB,CAA9B;;AAEA,YAAKR,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACY,MAAN,KAAiBH,aAAxC,EAAwD;AACvDT,UAAAA,KAAK,CAACa,cAAN;AACAH,UAAAA,YAAY,CAACN,KAAb;AACA,SAHD,MAGO,IACN,CAAEJ,KAAK,CAACW,QAAR,IACAX,KAAK,CAACY,MAAN,KAAiBF,YAFX,EAGL;AACDV,UAAAA,KAAK,CAACa,cAAN;AACAJ,UAAAA,aAAa,CAACL,KAAd;AACA;;;;AAIA,SAVM,MAUA,IAAK,CAAED,SAAS,CAACW,QAAV,CAAoBd,KAAK,CAACY,MAA1B,CAAP,EAA4C;AAClDZ,UAAAA,KAAK,CAACa,cAAN;AACAJ,UAAAA,aAAa,CAACL,KAAd;AACA;AACD;AAxCH;AAAA;AAAA,+BA0CW;AACR;AACA;;AACA;AACA,eACC;AACC,UAAA,SAAS,EAAG,KAAKN,kBADlB;AAEC,UAAA,GAAG,EAAG,KAAKD,eAFZ;AAGC,UAAA,QAAQ,EAAC;AAHV,WAKC,4BAAC,gBAAD,EAAuB,KAAKkB,KAA5B,CALD,CADD;AASA;AACA;AAxDH;AAAA;AAAA,IACeC,kBADf;AAAA,CAD8B,EA2D9B,wBA3D8B,CAA/B;eA8DetB,sB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component, createRef } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { TAB } from '@wordpress/keycodes';\nimport { focus } from '@wordpress/dom';\n\nconst withConstrainedTabbing = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\tclass extends Component {\n\t\t\tconstructor() {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.focusContainRef = createRef();\n\t\t\t\tthis.handleTabBehaviour = this.handleTabBehaviour.bind( this );\n\t\t\t}\n\n\t\t\thandleTabBehaviour( event ) {\n\t\t\t\tif ( event.keyCode !== TAB ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst tabbables = focus.tabbable.find(\n\t\t\t\t\tthis.focusContainRef.current\n\t\t\t\t);\n\t\t\t\tif ( ! tabbables.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst firstTabbable = tabbables[ 0 ];\n\t\t\t\tconst lastTabbable = tabbables[ tabbables.length - 1 ];\n\n\t\t\t\tif ( event.shiftKey && event.target === firstTabbable ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tlastTabbable.focus();\n\t\t\t\t} else if (\n\t\t\t\t\t! event.shiftKey &&\n\t\t\t\t\tevent.target === lastTabbable\n\t\t\t\t) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tfirstTabbable.focus();\n\t\t\t\t\t/*\n\t\t\t\t\t * When pressing Tab and none of the tabbables has focus, the keydown\n\t\t\t\t\t * event happens on the wrapper div: move focus on the first tabbable.\n\t\t\t\t\t */\n\t\t\t\t} else if ( ! tabbables.includes( event.target ) ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tfirstTabbable.focus();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\t// Disable reason: this component is non-interactive, but must capture\n\t\t\t\t// events from the wrapped component to determine when the Tab key is used.\n\t\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonKeyDown={ this.handleTabBehaviour }\n\t\t\t\t\t\tref={ this.focusContainRef }\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<WrappedComponent { ...this.props } />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\t\t\t}\n\t\t},\n\t'withConstrainedTabbing'\n);\n\nexport default withConstrainedTabbing;\n"]}