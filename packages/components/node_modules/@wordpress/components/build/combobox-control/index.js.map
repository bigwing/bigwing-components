{"version":3,"sources":["@wordpress/components/src/combobox-control/index.js"],"names":["itemToString","item","name","ComboboxControl","className","hideLabelFromVision","label","items","options","onInputValueChange","onSelectedItemChange","onChange","_selectedItem","value","initialSelectedItem","selectedItem","getLabelProps","getToggleButtonProps","getComboboxProps","getInputProps","getMenuProps","getItemProps","isOpen","highlightedIndex","menuProps","slice","length","undefined","map","index","key","style"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { useCombobox } from 'downshift';\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport { Button, Dashicon } from '../';\n\nconst itemToString = ( item ) => item && item.name;\nexport default function ComboboxControl( {\n\tclassName,\n\thideLabelFromVision,\n\tlabel,\n\toptions: items,\n\tonInputValueChange: onInputValueChange,\n\tonChange: onSelectedItemChange,\n\tvalue: _selectedItem,\n} ) {\n\tconst {\n\t\tgetLabelProps,\n\t\tgetToggleButtonProps,\n\t\tgetComboboxProps,\n\t\tgetInputProps,\n\t\tgetMenuProps,\n\t\tgetItemProps,\n\t\tisOpen,\n\t\thighlightedIndex,\n\t\tselectedItem,\n\t} = useCombobox( {\n\t\tinitialSelectedItem: items[ 0 ],\n\t\titems,\n\t\titemToString,\n\t\tonInputValueChange,\n\t\tonSelectedItemChange,\n\t\tselectedItem: _selectedItem,\n\t} );\n\tconst menuProps = getMenuProps( {\n\t\tclassName: 'components-combobox-control__menu',\n\t} );\n\t// We need this here, because the null active descendant is not\n\t// fully ARIA compliant.\n\tif (\n\t\tmenuProps[ 'aria-activedescendant' ] &&\n\t\tmenuProps[ 'aria-activedescendant' ].slice(\n\t\t\t0,\n\t\t\t'downshift-null'.length\n\t\t) === 'downshift-null'\n\t) {\n\t\tdelete menuProps[ 'aria-activedescendant' ];\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName={ classnames( 'components-combobox-control', className ) }\n\t\t>\n\t\t\t{ /* eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for */ }\n\t\t\t<label\n\t\t\t\t{ ...getLabelProps( {\n\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t'components-combobox-control__label',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'screen-reader-text': hideLabelFromVision,\n\t\t\t\t\t\t}\n\t\t\t\t\t),\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<div\n\t\t\t\t{ ...getComboboxProps( {\n\t\t\t\t\tclassName: 'components-combobox-control__button',\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\t{ ...getInputProps( {\n\t\t\t\t\t\tclassName: 'components-combobox-control__button-input',\n\t\t\t\t\t} ) }\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\t{ ...getToggleButtonProps( {\n\t\t\t\t\t\t// This is needed because some speech recognition software don't support `aria-labelledby`.\n\t\t\t\t\t\t'aria-label': label,\n\t\t\t\t\t\t'aria-labelledby': undefined,\n\t\t\t\t\t\tclassName: 'components-combobox-control__button-button',\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t<Dashicon\n\t\t\t\t\t\ticon=\"arrow-down-alt2\"\n\t\t\t\t\t\tclassName=\"components-combobox-control__button-icon\"\n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<ul { ...menuProps }>\n\t\t\t\t{ isOpen &&\n\t\t\t\t\titems.map( ( item, index ) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/jsx-key\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t{ ...getItemProps( {\n\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\t'components-combobox-control__item',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'is-highlighted':\n\t\t\t\t\t\t\t\t\t\t\tindex === highlightedIndex,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: item.style,\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item === selectedItem && (\n\t\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\t\ticon=\"saved\"\n\t\t\t\t\t\t\t\t\tclassName=\"components-combobox-control__item-icon\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ item.name }\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n"]}