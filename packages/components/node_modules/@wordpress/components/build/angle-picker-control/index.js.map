{"version":3,"sources":["@wordpress/components/src/angle-picker-control/index.js"],"names":["getAngle","centerX","centerY","pointX","pointY","y","x","angleInRadians","Math","atan2","angleInDeg","round","PI","AngleCircle","value","onChange","props","angleCircleRef","angleCircleCenter","setAngleCircleCenter","rect","current","getBoundingClientRect","width","height","changeAngleToPosition","event","preventDefault","clientX","clientY","onDragStart","onDragMove","onDragEnd","startDrag","isDragging","cursor","undefined","transform","AnglePickerControl","label","instanceId","inputId","unprocessedValue","target","inputValue","parseInt"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport {\n\tuseInstanceId,\n\t__experimentalUseDragging as useDragging,\n} from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BaseControl from '../base-control';\n\nfunction getAngle( centerX, centerY, pointX, pointY ) {\n\tconst y = pointY - centerY;\n\tconst x = pointX - centerX;\n\n\tconst angleInRadians = Math.atan2( y, x );\n\tconst angleInDeg = Math.round( angleInRadians * ( 180 / Math.PI ) ) + 90;\n\tif ( angleInDeg < 0 ) {\n\t\treturn 360 + angleInDeg;\n\t}\n\treturn angleInDeg;\n}\n\nconst AngleCircle = ( { value, onChange, ...props } ) => {\n\tconst angleCircleRef = useRef();\n\tconst angleCircleCenter = useRef();\n\n\tconst setAngleCircleCenter = () => {\n\t\tconst rect = angleCircleRef.current.getBoundingClientRect();\n\t\tangleCircleCenter.current = {\n\t\t\tx: rect.x + rect.width / 2,\n\t\t\ty: rect.y + rect.height / 2,\n\t\t};\n\t};\n\n\tconst changeAngleToPosition = ( event ) => {\n\t\tconst { x: centerX, y: centerY } = angleCircleCenter.current;\n\t\t// Prevent (drag) mouse events from selecting and accidentally\n\t\t// triggering actions from other elements.\n\t\tevent.preventDefault();\n\n\t\tonChange( getAngle( centerX, centerY, event.clientX, event.clientY ) );\n\t};\n\n\tconst { startDrag, isDragging } = useDragging( {\n\t\tonDragStart: ( event ) => {\n\t\t\tsetAngleCircleCenter();\n\t\t\tchangeAngleToPosition( event );\n\t\t},\n\t\tonDragMove: changeAngleToPosition,\n\t\tonDragEnd: changeAngleToPosition,\n\t} );\n\treturn (\n\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t<div\n\t\t\tref={ angleCircleRef }\n\t\t\tonMouseDown={ startDrag }\n\t\t\tclassName=\"components-angle-picker-control__angle-circle\"\n\t\t\tstyle={ isDragging ? { cursor: 'grabbing' } : undefined }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={\n\t\t\t\t\tvalue ? { transform: `rotate(${ value }deg)` } : undefined\n\t\t\t\t}\n\t\t\t\tclassName=\"components-angle-picker-control__angle-circle-indicator-wrapper\"\n\t\t\t>\n\t\t\t\t<span className=\"components-angle-picker-control__angle-circle-indicator\" />\n\t\t\t</div>\n\t\t</div>\n\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\t);\n};\n\nexport default function AnglePickerControl( {\n\tvalue,\n\tonChange,\n\tlabel = __( 'Angle' ),\n} ) {\n\tconst instanceId = useInstanceId( AnglePickerControl );\n\tconst inputId = `components-angle-picker-control__input-${ instanceId }`;\n\treturn (\n\t\t<BaseControl\n\t\t\tlabel={ label }\n\t\t\tid={ inputId }\n\t\t\tclassName=\"components-angle-picker-control\"\n\t\t>\n\t\t\t<AngleCircle\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\taria-hidden=\"true\"\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName=\"components-angle-picker-control__input-field\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tid={ inputId }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\tconst unprocessedValue = event.target.value;\n\t\t\t\t\tconst inputValue =\n\t\t\t\t\t\tunprocessedValue !== ''\n\t\t\t\t\t\t\t? parseInt( event.target.value, 10 )\n\t\t\t\t\t\t\t: 0;\n\t\t\t\t\tonChange( inputValue );\n\t\t\t\t} }\n\t\t\t\tvalue={ value }\n\t\t\t\tmin={ 0 }\n\t\t\t\tmax={ 360 }\n\t\t\t\tstep=\"1\"\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n}\n"]}