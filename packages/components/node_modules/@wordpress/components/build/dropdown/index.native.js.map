{"version":3,"sources":["@wordpress/components/src/dropdown/index.native.js"],"names":["Dropdown","arguments","toggle","bind","close","state","isOpen","onToggle","props","prevProps","prevState","setState","renderContent","renderToggle","args","onClose","Component"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AACL,sBAAc;AAAA;;AAAA;AACb,+BAAUC,SAAV;AAEA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,6CAAd;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWD,IAAX,6CAAb;AAEA,UAAKE,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AANa;AASb;;;;2CAEsB;AAAA,UACdA,MADc,GACH,KAAKD,KADF,CACdC,MADc;AAAA,UAEdC,QAFc,GAED,KAAKC,KAFJ,CAEdD,QAFc;;AAGtB,UAAKD,MAAM,IAAIC,QAAf,EAA0B;AACzBA,QAAAA,QAAQ,CAAE,KAAF,CAAR;AACA;AACD;;;uCAEmBE,S,EAAWC,S,EAAY;AAAA,UAClCJ,MADkC,GACvB,KAAKD,KADkB,CAClCC,MADkC;AAAA,UAElCC,QAFkC,GAErB,KAAKC,KAFgB,CAElCD,QAFkC;;AAG1C,UAAKG,SAAS,CAACJ,MAAV,KAAqBA,MAArB,IAA+BC,QAApC,EAA+C;AAC9CA,QAAAA,QAAQ,CAAED,MAAF,CAAR;AACA;AACD;;;6BAEQ;AACR,WAAKK,QAAL,CAAe,UAAEN,KAAF;AAAA,eAAe;AAC7BC,UAAAA,MAAM,EAAE,CAAED,KAAK,CAACC;AADa,SAAf;AAAA,OAAf;AAGA;;;4BAEO;AACP,WAAKK,QAAL,CAAe;AAAEL,QAAAA,MAAM,EAAE;AAAV,OAAf;AACA;;;6BAEQ;AAAA,UACAA,MADA,GACW,KAAKD,KADhB,CACAC,MADA;AAAA,wBAEgC,KAAKE,KAFrC;AAAA,UAEAI,aAFA,eAEAA,aAFA;AAAA,UAEeC,YAFf,eAEeA,YAFf;AAIR,UAAMC,IAAI,GAAG;AAAER,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,QAAQ,EAAE,KAAKL,MAAzB;AAAiCa,QAAAA,OAAO,EAAE,KAAKX;AAA/C,OAAb;AAEA,aACC,qDACGS,YAAY,CAAEC,IAAF,CADf,EAEGR,MAAM,IAAIM,aAAa,CAAEE,IAAF,CAF1B,CADD;AAMA;;;EAlDqBE,kB;;eAqDRhB,Q","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\nclass Dropdown extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.toggle = this.toggle.bind( this );\n\t\tthis.close = this.close.bind( this );\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { isOpen } = this.state;\n\t\tconst { onToggle } = this.props;\n\t\tif ( isOpen && onToggle ) {\n\t\t\tonToggle( false );\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst { isOpen } = this.state;\n\t\tconst { onToggle } = this.props;\n\t\tif ( prevState.isOpen !== isOpen && onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tthis.setState( ( state ) => ( {\n\t\t\tisOpen: ! state.isOpen,\n\t\t} ) );\n\t}\n\n\tclose() {\n\t\tthis.setState( { isOpen: false } );\n\t}\n\n\trender() {\n\t\tconst { isOpen } = this.state;\n\t\tconst { renderContent, renderToggle } = this.props;\n\n\t\tconst args = { isOpen, onToggle: this.toggle, onClose: this.close };\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ renderToggle( args ) }\n\t\t\t\t{ isOpen && renderContent( args ) }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Dropdown;\n"]}