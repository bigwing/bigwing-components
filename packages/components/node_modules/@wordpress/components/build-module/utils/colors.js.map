{"version":3,"sources":["@wordpress/components/src/utils/colors.js"],"names":["get","tinycolor","COLORS","rgba","hexValue","alpha","toRgb","r","g","b","color","value","fallbackColor"],"mappings":"AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;AAGA,SAASC,MAAT,QAAuB,iBAAvB;AAEA;;;;;;;;;;;;AAWA,OAAO,SAASC,IAAT,GAA0C;AAAA,MAA3BC,QAA2B,uEAAhB,EAAgB;AAAA,MAAZC,KAAY,uEAAJ,CAAI;;AAAA,yBAC5BJ,SAAS,CAAEG,QAAF,CAAT,CAAsBE,KAAtB,EAD4B;AAAA,MACxCC,CADwC,oBACxCA,CADwC;AAAA,MACrCC,CADqC,oBACrCA,CADqC;AAAA,MAClCC,CADkC,oBAClCA,CADkC;;AAEhD,wBAAgBF,CAAhB,eAAwBC,CAAxB,eAAgCC,CAAhC,eAAwCJ,KAAxC;AACA;AAED;;;;;;;;;;;AAUA,OAAO,SAASK,KAAT,CAAgBC,KAAhB,EAAwB;AAC9B,MAAMC,aAAa,GAAG,MAAtB;AACA,SAAOZ,GAAG,CAAEE,MAAF,EAAUS,KAAV,EAAiBC,aAAjB,CAAV;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\n/**\n * Internal dependencies\n */\nimport { COLORS } from './colors-values';\n\n/**\n * Generating a CSS complient rgba() color value.\n *\n * @param {string} hexValue The hex value to convert to rgba().\n * @param {number} alpha The alpha value for opacity.\n * @return {string} The converted rgba() color value.\n *\n * @example\n * rgba( '#000000', 0.5 )\n * // rgba(0, 0, 0, 0.5)\n */\nexport function rgba( hexValue = '', alpha = 1 ) {\n\tconst { r, g, b } = tinycolor( hexValue ).toRgb();\n\treturn `rgba(${ r }, ${ g }, ${ b }, ${ alpha })`;\n}\n\n/**\n * Retrieves a color from the color palette.\n *\n * @param {string} value The value to retrieve.\n * @return {string} The color (or fallback, if not found).\n *\n * @example\n * color( 'blue.wordpress.700' )\n * // #00669b\n */\nexport function color( value ) {\n\tconst fallbackColor = '#000';\n\treturn get( COLORS, value, fallbackColor );\n}\n"]}