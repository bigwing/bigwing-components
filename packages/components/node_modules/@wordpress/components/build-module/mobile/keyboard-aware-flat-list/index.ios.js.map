{"version":3,"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/index.ios.js"],"names":["React","KeyboardAwareScrollView","FlatList","isEqual","List","memo","KeyboardAwareFlatList","extraScrollHeight","shouldPreventAutomaticScroll","innerRef","autoScroll","scrollViewStyle","inputAccessoryViewHeight","listProps","flex","undefined","ref","scrollViewRef","keyboardWillShowIndicator","setTimeout","latestContentOffsetY","props","scrollToPosition","scrollEnabled","event","nativeEvent","contentOffset","y","handleCaretVerticalPositionChange","scrollView","targetId","caretY","previousCaretY","refreshScrollForField"],"mappings":";;;;;;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA;;;;AAIA,IAAMC,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAYH,QAAZ,EAAsBC,OAAtB,CAAb;AAEA,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MACpCC,iBADoC,QACpCA,iBADoC;AAAA,MAEpCC,4BAFoC,QAEpCA,4BAFoC;AAAA,MAGpCC,SAHoC,QAGpCA,QAHoC;AAAA,MAIpCC,UAJoC,QAIpCA,UAJoC;AAAA,MAKpCC,eALoC,QAKpCA,eALoC;AAAA,MAMpCC,wBANoC,QAMpCA,wBANoC;AAAA,MAOjCC,SAPiC;;AAAA,SASpC,cAAC,uBAAD;AACC,IAAA,KAAK,EAAG,CAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAF,EAAeH,eAAf,CADT;AAEC,IAAA,mBAAmB,EAAC,MAFrB;AAGC,IAAA,yBAAyB,EAAG,KAH7B;AAIC,IAAA,yBAAyB,EAAC,SAJ3B;AAKC,IAAA,iBAAiB,EAAGJ,iBALrB;AAMC,IAAA,WAAW,EAAG,CANf;AAOC,IAAA,wBAAwB,EAAGK,wBAP5B;AAQC,IAAA,qBAAqB,EAAGF,UAAU,KAAKK,SAAf,GAA2B,KAA3B,GAAmCL,UAR5D;AASC,IAAA,QAAQ,EAAG,kBAAEM,GAAF,EAAW;AACrB,MAAA,KAAI,CAACC,aAAL,GAAqBD,GAArB;;AACAP,MAAAA,SAAQ,CAAEO,GAAF,CAAR;AACA,KAZF;AAaC,IAAA,kBAAkB,EAAG,8BAAM;AAC1B,MAAA,KAAI,CAACE,yBAAL,GAAiC,KAAjC;AACA,KAfF;AAgBC,IAAA,iBAAiB,EAAG,6BAAM;AACzBC,MAAAA,UAAU,CAAE,YAAM;AACjB,YACC,CAAE,KAAI,CAACD,yBAAP,IACA,KAAI,CAACE,oBAAL,KAA8BL,SAD9B,IAEA,CAAEP,4BAA4B,EAH/B,EAIE;AACD;AACA,cAAK,KAAI,CAACS,aAAV,EAA0B;AACzB,YAAA,KAAI,CAACA,aAAL,CAAmBI,KAAnB,CAAyBC,gBAAzB,CACC,CADD,EAEC,KAAI,CAACF,oBAFN,EAGC,IAHD;AAKA;AACD;AACD,OAfS,EAeP,EAfO,CAAV;AAgBA,KAjCF;AAkCC,IAAA,kBAAkB,EAAG,8BAAM;AAC1B,MAAA,KAAI,CAACF,yBAAL,GAAiC,IAAjC;AACA,KApCF;AAqCC,IAAA,aAAa,EAAGL,SAAS,CAACU,aArC3B;AAsCC,IAAA,QAAQ,EAAG,kBAAEC,KAAF,EAAa;AACvB,MAAA,KAAI,CAACJ,oBAAL,GAA4BI,KAAK,CAACC,WAAN,CAAkBC,aAAlB,CAAgCC,CAA5D;AACA;AAxCF,KA0CC,cAAC,IAAD,EAAWd,SAAX,CA1CD,CAToC;AAAA,CAA9B;;AAuDPP,qBAAqB,CAACsB,iCAAtB,GAA0D,UACzDC,UADyD,EAEzDC,QAFyD,EAGzDC,MAHyD,EAIzDC,cAJyD,EAKrD;AACJ,MAAKA,cAAL,EAAsB;AACrB;AACAH,IAAAA,UAAU,CAACR,KAAX,CAAiBY,qBAAjB,CAAwCH,QAAxC;AACA;AACD,CAVD;;AAYA,eAAexB,qBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport React from 'react';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { FlatList } from 'react-native';\nimport { isEqual } from 'lodash';\n/**\n * WordPress dependencies\n */\n\nconst List = React.memo( FlatList, isEqual );\n\nexport const KeyboardAwareFlatList = ( {\n\textraScrollHeight,\n\tshouldPreventAutomaticScroll,\n\tinnerRef,\n\tautoScroll,\n\tscrollViewStyle,\n\tinputAccessoryViewHeight,\n\t...listProps\n} ) => (\n\t<KeyboardAwareScrollView\n\t\tstyle={ [ { flex: 1 }, scrollViewStyle ] }\n\t\tkeyboardDismissMode=\"none\"\n\t\tenableResetScrollToCoords={ false }\n\t\tkeyboardShouldPersistTaps=\"handled\"\n\t\textraScrollHeight={ extraScrollHeight }\n\t\textraHeight={ 0 }\n\t\tinputAccessoryViewHeight={ inputAccessoryViewHeight }\n\t\tenableAutomaticScroll={ autoScroll === undefined ? false : autoScroll }\n\t\tinnerRef={ ( ref ) => {\n\t\t\tthis.scrollViewRef = ref;\n\t\t\tinnerRef( ref );\n\t\t} }\n\t\tonKeyboardWillHide={ () => {\n\t\t\tthis.keyboardWillShowIndicator = false;\n\t\t} }\n\t\tonKeyboardDidHide={ () => {\n\t\t\tsetTimeout( () => {\n\t\t\t\tif (\n\t\t\t\t\t! this.keyboardWillShowIndicator &&\n\t\t\t\t\tthis.latestContentOffsetY !== undefined &&\n\t\t\t\t\t! shouldPreventAutomaticScroll()\n\t\t\t\t) {\n\t\t\t\t\t// Reset the content position if keyboard is still closed\n\t\t\t\t\tif ( this.scrollViewRef ) {\n\t\t\t\t\t\tthis.scrollViewRef.props.scrollToPosition(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tthis.latestContentOffsetY,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 50 );\n\t\t} }\n\t\tonKeyboardWillShow={ () => {\n\t\t\tthis.keyboardWillShowIndicator = true;\n\t\t} }\n\t\tscrollEnabled={ listProps.scrollEnabled }\n\t\tonScroll={ ( event ) => {\n\t\t\tthis.latestContentOffsetY = event.nativeEvent.contentOffset.y;\n\t\t} }\n\t>\n\t\t<List { ...listProps } />\n\t</KeyboardAwareScrollView>\n);\n\nKeyboardAwareFlatList.handleCaretVerticalPositionChange = (\n\tscrollView,\n\ttargetId,\n\tcaretY,\n\tpreviousCaretY\n) => {\n\tif ( previousCaretY ) {\n\t\t//if this is not the first tap\n\t\tscrollView.props.refreshScrollForField( targetId );\n\t}\n};\n\nexport default KeyboardAwareFlatList;\n"]}