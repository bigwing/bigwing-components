{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/index.native.js"],"names":["Text","View","Platform","PanResponder","Dimensions","ScrollView","Keyboard","StatusBar","TouchableHighlight","Modal","SafeArea","subscribeAndroidModalClosed","Component","withPreferredColorScheme","styles","Button","Cell","CyclePickerCell","PickerCell","SwitchCell","RangeCell","ColorCell","RadioCell","KeyboardAvoidingView","BottomSheetProvider","performLayoutAnimation","BottomSheet","arguments","onSafeAreaInsetsUpdate","bind","onScroll","isScrolling","onShouldEnableScroll","onShouldSetBottomSheetMaxHeight","onDimensionsChange","onCloseBottomSheet","onHandleClosingBottomSheet","onHardwareButtonPress","onHandleHardwareButtonPress","onReplaceSubsheet","keyboardWillShow","keyboardDidHide","state","safeAreaBottomInset","bounces","maxHeight","keyboardHeight","scrollEnabled","isMaxHeightSet","currentScreen","extraProps","getSafeAreaInsetsForRootView","then","addEventListener","e","height","endCoordinates","setState","onSetMaxHeight","OS","androidModalClosedSubscription","props","onClose","keyboardWillShowListener","addListener","keyboardDidHideListener","safeAreaEventSubscription","remove","removeEventListener","prevProps","isVisible","result","safeAreaInsets","bottom","get","width","statusBarHeight","currentHeight","maxHeightWithOpenKeyboard","Math","min","layoutMeasurement","contentOffset","contentSize","y","nativeEvent","isCloseToTop","isCloseToBottom","value","action","destination","callback","title","leftButton","rightButton","hideHeader","style","contentStyle","getStylesFromColorScheme","onDismiss","children","rest","panResponder","create","onMoveShouldSetPanResponder","evt","gestureState","dy","getHeader","head","flex","titleContainer","separator","backgroundStyle","background","backgroundDark","bottomModal","undefined","panHandlers","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","borderColor","dragIndicator","content","emptyHeader","shouldEnableBottomSheetScroll","shouldDisableBottomSheetMaxHeight","isBottomSheetContentScrolling","getWidth","maxWidth","ThemedBottomSheet"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tText,\n\tView,\n\tPlatform,\n\tPanResponder,\n\tDimensions,\n\tScrollView,\n\tKeyboard,\n\tStatusBar,\n\tTouchableHighlight,\n} from 'react-native';\nimport Modal from 'react-native-modal';\nimport SafeArea from 'react-native-safe-area';\n\n/**\n * WordPress dependencies\n */\nimport { subscribeAndroidModalClosed } from '@wordpress/react-native-bridge';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport Button from './button';\nimport Cell from './cell';\nimport CyclePickerCell from './cycle-picker-cell';\nimport PickerCell from './picker-cell';\nimport SwitchCell from './switch-cell';\nimport RangeCell from './range-cell';\nimport ColorCell from './color-cell';\nimport RadioCell from './radio-cell';\nimport KeyboardAvoidingView from './keyboard-avoiding-view';\nimport { BottomSheetProvider } from './bottom-sheet-context';\nimport { performLayoutAnimation } from '../layout-animation';\n\nclass BottomSheet extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onSafeAreaInsetsUpdate = this.onSafeAreaInsetsUpdate.bind( this );\n\t\tthis.onScroll = this.onScroll.bind( this );\n\t\tthis.isScrolling = this.isScrolling.bind( this );\n\t\tthis.onShouldEnableScroll = this.onShouldEnableScroll.bind( this );\n\t\tthis.onShouldSetBottomSheetMaxHeight = this.onShouldSetBottomSheetMaxHeight.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onDimensionsChange = this.onDimensionsChange.bind( this );\n\t\tthis.onCloseBottomSheet = this.onCloseBottomSheet.bind( this );\n\t\tthis.onHandleClosingBottomSheet = this.onHandleClosingBottomSheet.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onHardwareButtonPress = this.onHardwareButtonPress.bind( this );\n\t\tthis.onHandleHardwareButtonPress = this.onHandleHardwareButtonPress.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onReplaceSubsheet = this.onReplaceSubsheet.bind( this );\n\t\tthis.keyboardWillShow = this.keyboardWillShow.bind( this );\n\t\tthis.keyboardDidHide = this.keyboardDidHide.bind( this );\n\n\t\tthis.state = {\n\t\t\tsafeAreaBottomInset: 0,\n\t\t\tbounces: false,\n\t\t\tmaxHeight: 0,\n\t\t\tkeyboardHeight: 0,\n\t\t\tscrollEnabled: true,\n\t\t\tisScrolling: false,\n\t\t\tonCloseBottomSheet: null,\n\t\t\tonHardwareButtonPress: null,\n\t\t\tisMaxHeightSet: true,\n\t\t\tcurrentScreen: '',\n\t\t\textraProps: {},\n\t\t};\n\n\t\tSafeArea.getSafeAreaInsetsForRootView().then(\n\t\t\tthis.onSafeAreaInsetsUpdate\n\t\t);\n\t\tDimensions.addEventListener( 'change', this.onDimensionsChange );\n\t}\n\n\tkeyboardWillShow( e ) {\n\t\tconst { height } = e.endCoordinates;\n\n\t\tthis.setState( { keyboardHeight: height }, () =>\n\t\t\tthis.onSetMaxHeight()\n\t\t);\n\t}\n\n\tkeyboardDidHide() {\n\t\tthis.setState( { keyboardHeight: 0 }, () => this.onSetMaxHeight() );\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( Platform.OS === 'android' ) {\n\t\t\tthis.androidModalClosedSubscription = subscribeAndroidModalClosed(\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onClose();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.keyboardWillShowListener = Keyboard.addListener(\n\t\t\t'keyboardWillShow',\n\t\t\tthis.keyboardWillShow\n\t\t);\n\n\t\tthis.keyboardDidHideListener = Keyboard.addListener(\n\t\t\t'keyboardDidHide',\n\t\t\tthis.keyboardDidHide\n\t\t);\n\n\t\tthis.safeAreaEventSubscription = SafeArea.addEventListener(\n\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\tthis.onSafeAreaInsetsUpdate\n\t\t);\n\t\tthis.onSetMaxHeight();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.androidModalClosedSubscription ) {\n\t\t\tthis.androidModalClosedSubscription.remove();\n\t\t}\n\t\tif ( this.safeAreaEventSubscription === null ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.safeAreaEventSubscription.remove();\n\t\tthis.safeAreaEventSubscription = null;\n\t\tSafeArea.removeEventListener(\n\t\t\t'safeAreaInsetsForRootViewDidChange',\n\t\t\tthis.onSafeAreaInsetsUpdate\n\t\t);\n\t\tthis.keyboardWillShowListener.remove();\n\t\tthis.keyboardDidHideListener.remove();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { isVisible } = this.props;\n\n\t\tif ( ! prevProps.isVisible && isVisible ) {\n\t\t\tthis.setState( { currentScreen: '' } );\n\t\t}\n\t}\n\n\tonSafeAreaInsetsUpdate( result ) {\n\t\tconst { safeAreaBottomInset } = this.state;\n\t\tif ( this.safeAreaEventSubscription === null ) {\n\t\t\treturn;\n\t\t}\n\t\tconst { safeAreaInsets } = result;\n\t\tif ( safeAreaBottomInset !== safeAreaInsets.bottom ) {\n\t\t\tthis.setState( { safeAreaBottomInset: safeAreaInsets.bottom } );\n\t\t}\n\t}\n\n\tonSetMaxHeight() {\n\t\tconst { height, width } = Dimensions.get( 'window' );\n\t\tconst { safeAreaBottomInset, keyboardHeight } = this.state;\n\t\tconst statusBarHeight =\n\t\t\tPlatform.OS === 'android' ? StatusBar.currentHeight : 0;\n\n\t\t// `maxHeight` when modal is opened along with a keyboard\n\t\tconst maxHeightWithOpenKeyboard =\n\t\t\t0.95 *\n\t\t\t( Dimensions.get( 'window' ).height -\n\t\t\t\tkeyboardHeight -\n\t\t\t\tstatusBarHeight );\n\n\t\t// On horizontal mode `maxHeight` has to be set on 90% of width\n\t\tif ( width > height ) {\n\t\t\tthis.setState( {\n\t\t\t\tmaxHeight: Math.min( 0.9 * height, maxHeightWithOpenKeyboard ),\n\t\t\t} );\n\t\t\t//\tOn vertical mode `maxHeight` has to be set on 50% of width\n\t\t} else {\n\t\t\tthis.setState( {\n\t\t\t\tmaxHeight: Math.min(\n\t\t\t\t\theight / 2 - safeAreaBottomInset,\n\t\t\t\t\tmaxHeightWithOpenKeyboard\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\t}\n\n\tonDimensionsChange() {\n\t\tthis.onSetMaxHeight();\n\t\tthis.setState( { bounces: false } );\n\t}\n\n\tisCloseToBottom( { layoutMeasurement, contentOffset, contentSize } ) {\n\t\treturn (\n\t\t\tlayoutMeasurement.height + contentOffset.y >=\n\t\t\tcontentSize.height - contentOffset.y\n\t\t);\n\t}\n\n\tisCloseToTop( { contentOffset } ) {\n\t\treturn contentOffset.y < 10;\n\t}\n\n\tonScroll( { nativeEvent } ) {\n\t\tif ( this.isCloseToTop( nativeEvent ) ) {\n\t\t\tthis.setState( { bounces: false } );\n\t\t} else if ( this.isCloseToBottom( nativeEvent ) ) {\n\t\t\tthis.setState( { bounces: true } );\n\t\t}\n\t}\n\n\tonShouldEnableScroll( value ) {\n\t\tthis.setState( { scrollEnabled: value } );\n\t}\n\n\tonShouldSetBottomSheetMaxHeight( value ) {\n\t\tthis.setState( { isMaxHeightSet: value } );\n\t}\n\n\tisScrolling( value ) {\n\t\tthis.setState( { isScrolling: value } );\n\t}\n\n\tonHandleClosingBottomSheet( action ) {\n\t\tthis.setState( { onCloseBottomSheet: action } );\n\t}\n\n\tonHandleHardwareButtonPress( action ) {\n\t\tthis.setState( { onHardwareButtonPress: action } );\n\t}\n\n\tonCloseBottomSheet() {\n\t\tconst { onClose } = this.props;\n\t\tconst { onCloseBottomSheet } = this.state;\n\t\tif ( onCloseBottomSheet ) {\n\t\t\tonCloseBottomSheet();\n\t\t}\n\t\tonClose();\n\t}\n\n\tonHardwareButtonPress() {\n\t\tconst { onClose } = this.props;\n\t\tconst { onHardwareButtonPress } = this.state;\n\t\tif ( onHardwareButtonPress ) {\n\t\t\treturn onHardwareButtonPress();\n\t\t}\n\t\treturn onClose();\n\t}\n\n\tonReplaceSubsheet( destination, extraProps, callback ) {\n\t\tperformLayoutAnimation();\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcurrentScreen: destination,\n\t\t\t\textraProps: extraProps || {},\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttitle = '',\n\t\t\tisVisible,\n\t\t\tleftButton,\n\t\t\trightButton,\n\t\t\thideHeader,\n\t\t\tstyle = {},\n\t\t\tcontentStyle = {},\n\t\t\tgetStylesFromColorScheme,\n\t\t\tonDismiss,\n\t\t\tchildren,\n\t\t\t...rest\n\t\t} = this.props;\n\t\tconst {\n\t\t\tmaxHeight,\n\t\t\tbounces,\n\t\t\tsafeAreaBottomInset,\n\t\t\tisScrolling,\n\t\t\tscrollEnabled,\n\t\t\tisMaxHeightSet,\n\t\t\textraProps,\n\t\t\tcurrentScreen,\n\t\t} = this.state;\n\n\t\tconst panResponder = PanResponder.create( {\n\t\t\tonMoveShouldSetPanResponder: ( evt, gestureState ) => {\n\t\t\t\t// 'swiping-to-close' option is temporarily and partially disabled\n\t\t\t\t//\ton Android ( swipe / drag is still available in the top most area - near drag indicator)\n\t\t\t\tif ( Platform.OS === 'ios' ) {\n\t\t\t\t\t// Activates swipe down over child Touchables if the swipe is long enough.\n\t\t\t\t\t// With this we can adjust sensibility on the swipe vs tap gestures.\n\t\t\t\t\tif ( gestureState.dy > 3 && ! bounces ) {\n\t\t\t\t\t\tgestureState.dy = 0;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t} );\n\n\t\tconst getHeader = () => (\n\t\t\t<View>\n\t\t\t\t<View style={ styles.head }>\n\t\t\t\t\t<View style={ { flex: 1 } }>{ leftButton }</View>\n\t\t\t\t\t<View style={ styles.titleContainer }>\n\t\t\t\t\t\t<Text style={ styles.title }>{ title }</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={ { flex: 1 } }>{ rightButton }</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={ styles.separator } />\n\t\t\t</View>\n\t\t);\n\n\t\tconst backgroundStyle = getStylesFromColorScheme(\n\t\t\tstyles.background,\n\t\t\tstyles.backgroundDark\n\t\t);\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tisVisible={ isVisible }\n\t\t\t\tstyle={ styles.bottomModal }\n\t\t\t\tanimationInTiming={ 600 }\n\t\t\t\tanimationOutTiming={ 300 }\n\t\t\t\tbackdropTransitionInTiming={ 50 }\n\t\t\t\tbackdropTransitionOutTiming={ 50 }\n\t\t\t\tbackdropOpacity={ 0.2 }\n\t\t\t\tonBackdropPress={ this.onCloseBottomSheet }\n\t\t\t\tonBackButtonPress={ this.onHardwareButtonPress }\n\t\t\t\tonSwipe={ this.onCloseBottomSheet }\n\t\t\t\tonDismiss={ Platform.OS === 'ios' ? onDismiss : undefined }\n\t\t\t\tonModalHide={\n\t\t\t\t\tPlatform.OS === 'android' ? onDismiss : undefined\n\t\t\t\t}\n\t\t\t\tswipeDirection=\"down\"\n\t\t\t\tonMoveShouldSetResponder={\n\t\t\t\t\tscrollEnabled &&\n\t\t\t\t\tpanResponder.panHandlers.onMoveShouldSetResponder\n\t\t\t\t}\n\t\t\t\tonMoveShouldSetResponderCapture={\n\t\t\t\t\tscrollEnabled &&\n\t\t\t\t\tpanResponder.panHandlers.onMoveShouldSetResponderCapture\n\t\t\t\t}\n\t\t\t\tonAccessibilityEscape={ this.onCloseBottomSheet }\n\t\t\t\t{ ...rest }\n\t\t\t>\n\t\t\t\t<KeyboardAvoidingView\n\t\t\t\t\tbehavior={ Platform.OS === 'ios' && 'padding' }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t...backgroundStyle,\n\t\t\t\t\t\tborderColor: 'rgba(0, 0, 0, 0.1)',\n\t\t\t\t\t\t...style,\n\t\t\t\t\t} }\n\t\t\t\t\tkeyboardVerticalOffset={ -safeAreaBottomInset }\n\t\t\t\t>\n\t\t\t\t\t<View style={ styles.dragIndicator } />\n\t\t\t\t\t{ ! hideHeader && getHeader() }\n\t\t\t\t\t<ScrollView\n\t\t\t\t\t\tdisableScrollViewPanResponder\n\t\t\t\t\t\tbounces={ bounces }\n\t\t\t\t\t\tonScroll={ this.onScroll }\n\t\t\t\t\t\tonScrollBeginDrag={ () => this.isScrolling( true ) }\n\t\t\t\t\t\tonScrollEndDrag={ () => this.isScrolling( false ) }\n\t\t\t\t\t\tscrollEventThrottle={ 16 }\n\t\t\t\t\t\tstyle={ isMaxHeightSet ? { maxHeight } : {} }\n\t\t\t\t\t\tcontentContainerStyle={ [\n\t\t\t\t\t\t\tstyles.content,\n\t\t\t\t\t\t\thideHeader && styles.emptyHeader,\n\t\t\t\t\t\t\tcontentStyle,\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tscrollEnabled={ scrollEnabled }\n\t\t\t\t\t\tautomaticallyAdjustContentInsets={ false }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BottomSheetProvider\n\t\t\t\t\t\t\tvalue={ {\n\t\t\t\t\t\t\t\tshouldEnableBottomSheetScroll: this\n\t\t\t\t\t\t\t\t\t.onShouldEnableScroll,\n\t\t\t\t\t\t\t\tshouldDisableBottomSheetMaxHeight: this\n\t\t\t\t\t\t\t\t\t.onShouldSetBottomSheetMaxHeight,\n\t\t\t\t\t\t\t\tisBottomSheetContentScrolling: isScrolling,\n\t\t\t\t\t\t\t\tonCloseBottomSheet: this\n\t\t\t\t\t\t\t\t\t.onHandleClosingBottomSheet,\n\t\t\t\t\t\t\t\tonHardwareButtonPress: this\n\t\t\t\t\t\t\t\t\t.onHandleHardwareButtonPress,\n\t\t\t\t\t\t\t\tonReplaceSubsheet: this.onReplaceSubsheet,\n\t\t\t\t\t\t\t\textraProps,\n\t\t\t\t\t\t\t\tcurrentScreen,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TouchableHighlight accessible={ false }>\n\t\t\t\t\t\t\t\t<>{ children }</>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t</BottomSheetProvider>\n\t\t\t\t\t\t<View style={ { height: safeAreaBottomInset } } />\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</KeyboardAvoidingView>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nfunction getWidth() {\n\treturn Math.min(\n\t\tDimensions.get( 'window' ).width,\n\t\tstyles.background.maxWidth\n\t);\n}\n\nconst ThemedBottomSheet = withPreferredColorScheme( BottomSheet );\n\nThemedBottomSheet.getWidth = getWidth;\nThemedBottomSheet.Button = Button;\nThemedBottomSheet.Cell = Cell;\nThemedBottomSheet.CyclePickerCell = CyclePickerCell;\nThemedBottomSheet.PickerCell = PickerCell;\nThemedBottomSheet.SwitchCell = SwitchCell;\nThemedBottomSheet.RangeCell = RangeCell;\nThemedBottomSheet.ColorCell = ColorCell;\nThemedBottomSheet.RadioCell = RadioCell;\n\nexport default ThemedBottomSheet;\n"]}