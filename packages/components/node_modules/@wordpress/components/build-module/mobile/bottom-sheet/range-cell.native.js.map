{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/range-cell.native.js"],"names":["Platform","AccessibilityInfo","findNodeHandle","TextInput","View","PixelRatio","AppState","Slider","_x","__","sprintf","Component","withPreferredColorScheme","Cell","styles","borderStyles","BottomSheetRangeCell","props","handleToggleFocus","bind","handleChange","handleValueSave","onChangeValue","onCellPress","handleChangePixelRatio","initialValue","validateInput","value","defaultValue","minimumValue","fontScale","getFontScale","state","accessible","sliderValue","hasFocus","addEventListener","removeEventListener","nextAppState","setState","text","isNaN","Number","announceCurrentValue","newState","maximumValue","Math","min","max","replace","onChange","sliderRef","reactTag","setAccessibilityFocus","announcement","announceForAccessibility","disabled","step","preferredColorScheme","minimumTrackTintColor","maximumTrackTintColor","OS","thumbTintColor","getStylesFromColorScheme","cellProps","accessibilityLabel","label","defaultSliderStyle","sliderTextInput","sliderDarkTextInput","cellContainerStyles","cellRowStyles","container","slider","borderStyle","isSelected","width"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tPlatform,\n\tAccessibilityInfo,\n\tfindNodeHandle,\n\tTextInput,\n\tView,\n\tPixelRatio,\n\tAppState,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\n\n/**\n * WordPress dependencies\n */\nimport { _x, __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport styles from './range-cell.scss';\nimport borderStyles from './borderStyles.scss';\n\nclass BottomSheetRangeCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.handleToggleFocus = this.handleToggleFocus.bind( this );\n\t\tthis.handleChange = this.handleChange.bind( this );\n\t\tthis.handleValueSave = this.handleValueSave.bind( this );\n\t\tthis.onChangeValue = this.onChangeValue.bind( this );\n\t\tthis.onCellPress = this.onCellPress.bind( this );\n\t\tthis.handleChangePixelRatio = this.handleChangePixelRatio.bind( this );\n\n\t\tconst initialValue = this.validateInput(\n\t\t\tprops.value || props.defaultValue || props.minimumValue\n\t\t);\n\t\tconst fontScale = this.getFontScale();\n\n\t\tthis.state = {\n\t\t\taccessible: true,\n\t\t\tsliderValue: initialValue,\n\t\t\tinitialValue,\n\t\t\thasFocus: false,\n\t\t\tfontScale,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tAppState.addEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.handleToggleFocus();\n\t\tAppState.removeEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tgetFontScale() {\n\t\treturn PixelRatio.getFontScale() < 1 ? 1 : PixelRatio.getFontScale();\n\t}\n\n\thandleChangePixelRatio( nextAppState ) {\n\t\tif ( nextAppState === 'active' ) {\n\t\t\tthis.setState( { fontScale: this.getFontScale() } );\n\t\t}\n\t}\n\n\thandleChange( text ) {\n\t\tif ( ! isNaN( Number( text ) ) ) {\n\t\t\tthis.setState( { sliderValue: text } );\n\t\t\tthis.announceCurrentValue( text );\n\t\t}\n\t}\n\n\thandleToggleFocus( validateInput = true ) {\n\t\tconst newState = { hasFocus: ! this.state.hasFocus };\n\n\t\tif ( validateInput ) {\n\t\t\tconst sliderValue = this.validateInput( this.state.sliderValue );\n\t\t\tthis.handleValueSave( sliderValue );\n\t\t}\n\n\t\tthis.setState( newState );\n\t}\n\n\tvalidateInput( text ) {\n\t\tconst { minimumValue, maximumValue } = this.props;\n\t\tif ( ! text ) {\n\t\t\treturn minimumValue;\n\t\t}\n\t\tif ( typeof text === 'number' ) {\n\t\t\treturn Math.min( Math.max( text, minimumValue ), maximumValue );\n\t\t}\n\t\treturn Math.min(\n\t\t\tMath.max(\n\t\t\t\ttext.replace( /[^0-9]/g, '' ).replace( /^0+(?=\\d)/, '' ),\n\t\t\t\tminimumValue\n\t\t\t),\n\t\t\tmaximumValue\n\t\t);\n\t}\n\n\thandleValueSave( text ) {\n\t\tif ( ! isNaN( Number( text ) ) ) {\n\t\t\tthis.onChangeValue( text );\n\t\t\tthis.setState( { sliderValue: text } );\n\t\t\tthis.announceCurrentValue( text );\n\t\t}\n\t}\n\n\tonChangeValue( initialValue ) {\n\t\tconst { minimumValue, maximumValue, onChange } = this.props;\n\n\t\tlet sliderValue = initialValue;\n\t\tif ( sliderValue < minimumValue ) {\n\t\t\tsliderValue = minimumValue;\n\t\t} else if ( sliderValue > maximumValue ) {\n\t\t\tsliderValue = maximumValue;\n\t\t}\n\t\tonChange( sliderValue );\n\t}\n\n\tonCellPress() {\n\t\tthis.setState( { accessible: false } );\n\t\tif ( this.sliderRef ) {\n\t\t\tconst reactTag = findNodeHandle( this.sliderRef );\n\t\t\tAccessibilityInfo.setAccessibilityFocus( reactTag );\n\t\t}\n\t}\n\n\tannounceCurrentValue( value ) {\n\t\t/* translators: %s: current cell value. */\n\t\tconst announcement = sprintf( __( 'Current value is %s' ), value );\n\t\tAccessibilityInfo.announceForAccessibility( announcement );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tminimumValue = 0,\n\t\t\tmaximumValue = 10,\n\t\t\tdisabled,\n\t\t\tstep = 1,\n\t\t\tpreferredColorScheme,\n\t\t\tminimumTrackTintColor = preferredColorScheme === 'light'\n\t\t\t\t? '#00669b'\n\t\t\t\t: '#5198d9',\n\t\t\tmaximumTrackTintColor = Platform.OS === 'ios'\n\t\t\t\t? '#e9eff3'\n\t\t\t\t: '#909090',\n\t\t\tthumbTintColor = Platform.OS === 'android' && '#00669b',\n\t\t\tgetStylesFromColorScheme,\n\t\t\t...cellProps\n\t\t} = this.props;\n\n\t\tconst { hasFocus, sliderValue, accessible, fontScale } = this.state;\n\n\t\tconst accessibilityLabel = sprintf(\n\t\t\t/* translators: accessibility text. Inform about current value. %1$s: Control label %2$s: Current value. */\n\t\t\t_x(\n\t\t\t\t'%1$s. Current value is %2$s',\n\t\t\t\t'Slider for picking a number inside a range'\n\t\t\t),\n\t\t\tcellProps.label,\n\t\t\tvalue\n\t\t);\n\n\t\tconst defaultSliderStyle = getStylesFromColorScheme(\n\t\t\tstyles.sliderTextInput,\n\t\t\tstyles.sliderDarkTextInput\n\t\t);\n\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\t{ ...cellProps }\n\t\t\t\tcellContainerStyle={ styles.cellContainerStyles }\n\t\t\t\tcellRowContainerStyle={ styles.cellRowStyles }\n\t\t\t\taccessibilityRole={ 'none' }\n\t\t\t\tvalue={ '' }\n\t\t\t\teditable={ false }\n\t\t\t\tactiveOpacity={ 1 }\n\t\t\t\taccessible={ accessible }\n\t\t\t\tonPress={ this.onCellPress }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\t/* translators: accessibility text (hint for focusing a slider) */\n\t\t\t\t\t__( 'Double tap to change the value using slider' )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<View style={ styles.container }>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tvalue={ this.validateInput( sliderValue ) }\n\t\t\t\t\t\tdefaultValue={ defaultValue }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\tminimumValue={ minimumValue }\n\t\t\t\t\t\tmaximumValue={ maximumValue }\n\t\t\t\t\t\tminimumTrackTintColor={ minimumTrackTintColor }\n\t\t\t\t\t\tmaximumTrackTintColor={ maximumTrackTintColor }\n\t\t\t\t\t\tthumbTintColor={ thumbTintColor }\n\t\t\t\t\t\tonValueChange={ this.handleChange }\n\t\t\t\t\t\tonSlidingComplete={ this.handleValueSave }\n\t\t\t\t\t\tref={ ( slider ) => {\n\t\t\t\t\t\t\tthis.sliderRef = slider;\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tstyle={ styles.slider }\n\t\t\t\t\t\taccessibilityRole={ 'adjustable' }\n\t\t\t\t\t/>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\tdefaultSliderStyle,\n\t\t\t\t\t\t\tborderStyles.borderStyle,\n\t\t\t\t\t\t\thasFocus && borderStyles.isSelected,\n\t\t\t\t\t\t\t{ width: 40 * fontScale },\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tonChangeText={ this.handleChange }\n\t\t\t\t\t\tonFocus={ this.handleToggleFocus }\n\t\t\t\t\t\tonBlur={ this.handleToggleFocus }\n\t\t\t\t\t\tkeyboardType=\"number-pad\"\n\t\t\t\t\t\treturnKeyType=\"done\"\n\t\t\t\t\t\tvalue={ `${ sliderValue }` }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</Cell>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetRangeCell );\n"]}