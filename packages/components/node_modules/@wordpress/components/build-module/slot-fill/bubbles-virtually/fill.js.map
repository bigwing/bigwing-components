{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/fill.js"],"names":["useRef","useState","useEffect","createPortal","useSlot","useForceUpdate","setState","Fill","name","children","slot","ref","rerender","registerFill","unregisterFill","current","fillProps"],"mappings":";;AAAA;;;AAGA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,YAAtC,QAA0D,oBAA1D;AAEA;;;;AAGA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,SAASC,cAAT,GAA0B;AAAA,kBACFJ,QAAQ,CAAE,EAAF,CADN;AAAA;AAAA,MACfK,QADe;;AAEzB,SAAO;AAAA,WAAMA,QAAQ,CAAE,EAAF,CAAd;AAAA,GAAP;AACA;;AAED,eAAe,SAASC,IAAT,OAAoC;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,QAAa,QAAbA,QAAa;AAClD,MAAMC,IAAI,GAAGN,OAAO,CAAEI,IAAF,CAApB;AACA,MAAMG,GAAG,GAAGX,MAAM,CAAE;AAAEY,IAAAA,QAAQ,EAAEP,cAAc;AAA1B,GAAF,CAAlB;AAEAH,EAAAA,SAAS,CAAE,YAAM;AAChB;AACA;AACA;AACAQ,IAAAA,IAAI,CAACG,YAAL,CAAmBF,GAAnB;AACA,WAAO,YAAM;AACZD,MAAAA,IAAI,CAACI,cAAL,CAAqBH,GAArB;AACA,KAFD;AAGA,GARQ,EAQN,CAAED,IAAI,CAACG,YAAP,EAAqBH,IAAI,CAACI,cAA1B,CARM,CAAT;;AAUA,MAAK,CAAEJ,IAAI,CAACC,GAAP,IAAc,CAAED,IAAI,CAACC,GAAL,CAASI,OAA9B,EAAwC;AACvC,WAAO,IAAP;AACA;;AAED,MAAK,OAAON,QAAP,KAAoB,UAAzB,EAAsC;AACrCA,IAAAA,QAAQ,GAAGA,QAAQ,CAAEC,IAAI,CAACM,SAAP,CAAnB;AACA;;AAED,SAAOb,YAAY,CAAEM,QAAF,EAAYC,IAAI,CAACC,GAAL,CAASI,OAArB,CAAnB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useState, useEffect, createPortal } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useSlot from './use-slot';\n\nfunction useForceUpdate() {\n\tconst [ , setState ] = useState( {} );\n\treturn () => setState( {} );\n}\n\nexport default function Fill( { name, children } ) {\n\tconst slot = useSlot( name );\n\tconst ref = useRef( { rerender: useForceUpdate() } );\n\n\tuseEffect( () => {\n\t\t// We register fills so we can keep track of their existance.\n\t\t// Some Slot implementations need to know if there're already fills\n\t\t// registered so they can choose to render themselves or not.\n\t\tslot.registerFill( ref );\n\t\treturn () => {\n\t\t\tslot.unregisterFill( ref );\n\t\t};\n\t}, [ slot.registerFill, slot.unregisterFill ] );\n\n\tif ( ! slot.ref || ! slot.ref.current ) {\n\t\treturn null;\n\t}\n\n\tif ( typeof children === 'function' ) {\n\t\tchildren = children( slot.fillProps );\n\t}\n\n\treturn createPortal( children, slot.ref.current );\n}\n"]}