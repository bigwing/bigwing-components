import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { noop } from 'lodash';
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { forwardRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import Label from './label';
import { useResizeLabel, POSITIONS } from './utils';
import { Root } from './styles/resize-tooltip.styles';

function ResizeTooltip(_ref, ref) {
  var axis = _ref.axis,
      className = _ref.className,
      _ref$fadeTimeout = _ref.fadeTimeout,
      fadeTimeout = _ref$fadeTimeout === void 0 ? 180 : _ref$fadeTimeout,
      _ref$isVisible = _ref.isVisible,
      isVisible = _ref$isVisible === void 0 ? true : _ref$isVisible,
      labelRef = _ref.labelRef,
      _ref$onResize = _ref.onResize,
      onResize = _ref$onResize === void 0 ? noop : _ref$onResize,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? POSITIONS.bottom : _ref$position,
      _ref$showPx = _ref.showPx,
      showPx = _ref$showPx === void 0 ? true : _ref$showPx,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1000 : _ref$zIndex,
      props = _objectWithoutProperties(_ref, ["axis", "className", "fadeTimeout", "isVisible", "labelRef", "onResize", "position", "showPx", "zIndex"]);

  var _useResizeLabel = useResizeLabel({
    axis: axis,
    fadeTimeout: fadeTimeout,
    onResize: onResize,
    showPx: showPx,
    position: position
  }),
      label = _useResizeLabel.label,
      resizeListener = _useResizeLabel.resizeListener;

  if (!isVisible) return null;
  var classes = classnames('components-resize-tooltip', className);
  return createElement(Root, _extends({
    "aria-hidden": "true",
    className: classes,
    ref: ref
  }, props), resizeListener, createElement(Label, {
    "aria-hidden": props['aria-hidden'],
    fadeTimeout: fadeTimeout,
    isVisible: isVisible,
    label: label,
    position: position,
    ref: labelRef,
    zIndex: zIndex
  }));
}

var ForwardedComponent = forwardRef(ResizeTooltip);
export default ForwardedComponent;
//# sourceMappingURL=index.js.map