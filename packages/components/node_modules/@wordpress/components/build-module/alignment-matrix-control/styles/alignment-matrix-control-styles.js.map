{"version":3,"sources":["@wordpress/components/src/alignment-matrix-control/styles/alignment-matrix-control-styles.js"],"names":["css","color","reduceMotion","rootBase","rootSize","size","Root","Row","pointActive","isActive","boxShadow","pointColor","pointColorHover","pointBase","props","Point","Cell"],"mappings":";;;;AAIA,SAASA,GAAT,QAAoB,eAApB;AAEA;;;;AAGA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,0BAApC;;;;;;;;;;;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC7B;AAOA,CARM;;AAUP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,QAAqB;AAAA,yBAAjBC,IAAiB;AAAA,MAAjBA,IAAiB,2BAAV,EAAU;AACrC,sBAAOL,GAAP,wCACyCK,IADzC,uBAEWA,IAFX;AAIA,CALD;;AAOA,OAAO,IAAMC,IAAI;AAAA;AAAA;AAAA,GACbH,QADa,8EAObC,QAPa,6+FAAV;AAUP,OAAO,IAAMG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAT;;AAMP,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAoB;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;AACvC,MAAMC,SAAS,GAAGD,QAAQ,uBAAiBR,KAAK,CAAE,OAAF,CAAtB,IAAuC,IAAjE;AACA,MAAMU,UAAU,GAAGF,QAAQ,GAAGR,KAAK,CAAE,OAAF,CAAR,GAAsBA,KAAK,CAAE,eAAF,CAAtD;AACA,MAAMW,eAAe,GAAGH,QAAQ,GAC7BR,KAAK,CAAE,OAAF,CADwB,GAE7BA,KAAK,CAAE,mBAAF,CAFR;AAIA,sBAAOD,GAAP,gBACgBU,SADhB,aAEWC,UAFX,yBAKYC,eALZ;AAQA,CAfD;;AAiBA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAEC,KAAF,EAAa;AACrC,sBAAOd,GAAP,wGAOIE,YAAY,CAAE,YAAF,CAPhB,OAQIM,WAAW,CAAEM,KAAF,CARf;AAUA,CAXM;AAaP,OAAO,IAAMC,KAAK;AAAA;AAAA;AAAA,4BAGdF,SAHc,q+FAAX;AAMP,OAAO,IAAMG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAV","sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\n/**\n * Internal dependencies\n */\nimport { color, reduceMotion } from '../../utils/style-mixins';\n\nexport const rootBase = () => {\n\treturn css`\n\t\tborder-radius: 2px;\n\t\tbox-sizing: border-box;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat( 3, 1fr );\n\t\toutline: none;\n\t`;\n};\n\nconst rootSize = ( { size = 92 } ) => {\n\treturn css`\n\t\tgrid-template-rows: repeat( 3, calc( ${ size }px / 3 ) );\n\t\twidth: ${ size }px;\n\t`;\n};\n\nexport const Root = styled.div`\n\t${ rootBase };\n\n\tborder: 1px solid transparent;\n\tcursor: pointer;\n\tgrid-template-columns: auto;\n\n\t${ rootSize };\n`;\n\nexport const Row = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: grid;\n\tgrid-template-columns: repeat( 3, 1fr );\n`;\n\nconst pointActive = ( { isActive } ) => {\n\tconst boxShadow = isActive ? `0 0 0 2px ${ color( 'black' ) }` : null;\n\tconst pointColor = isActive ? color( 'black' ) : color( 'lightGray.800' );\n\tconst pointColorHover = isActive\n\t\t? color( 'black' )\n\t\t: color( 'blue.medium.focus' );\n\n\treturn css`\n\t\tbox-shadow: ${ boxShadow };\n\t\tcolor: ${ pointColor };\n\n\t\t*:hover > & {\n\t\t\tcolor: ${ pointColorHover };\n\t\t}\n\t`;\n};\n\nexport const pointBase = ( props ) => {\n\treturn css`\n\t\tbackground: currentColor;\n\t\tbox-sizing: border-box;\n\t\tdisplay: grid;\n\t\tmargin: auto;\n\t\ttransition: all 120ms linear;\n\n\t\t${ reduceMotion( 'transition' ) }\n\t\t${ pointActive( props ) }\n\t`;\n};\n\nexport const Point = styled.span`\n\theight: 6px;\n\twidth: 6px;\n\t${ pointBase }\n`;\n\nexport const Cell = styled.span`\n\tappearance: none;\n\tborder: none;\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tdisplay: flex;\n\tposition: relative;\n\toutline: none;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0;\n`;\n"]}