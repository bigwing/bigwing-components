{"version":3,"sources":["@wordpress/components/src/box-control/unit-control.js"],"names":["noop","useHover","BaseTooltip","UnitControlWrapper","UnitControl","BoxUnitControl","isFirst","isLast","isOnly","onHoverOn","onHoverOff","label","value","props","bindHoverGesture","event","state","hovering","Tooltip","children","text"],"mappings":";;;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA;;;;AAGA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,6BAAhD;AAEA,eAAe,SAASC,cAAT,OASX;AAAA,MARHC,OAQG,QARHA,OAQG;AAAA,MAPHC,MAOG,QAPHA,MAOG;AAAA,MANHC,MAMG,QANHA,MAMG;AAAA,4BALHC,SAKG;AAAA,MALHA,SAKG,+BALST,IAKT;AAAA,6BAJHU,UAIG;AAAA,MAJHA,UAIG,gCAJUV,IAIV;AAAA,MAHHW,KAGG,QAHHA,KAGG;AAAA,MAFHC,KAEG,QAFHA,KAEG;AAAA,MADAC,KACA;;AACH,MAAMC,gBAAgB,GAAGb,QAAQ,CAAE,iBAA2B;AAAA,QAAvBc,KAAuB,SAAvBA,KAAuB;AAAA,QAAbC,KAAa;;AAC7D,QAAKA,KAAK,CAACC,QAAX,EAAsB;AACrBR,MAAAA,SAAS,CAAEM,KAAF,EAASC,KAAT,CAAT;AACA,KAFD,MAEO;AACNN,MAAAA,UAAU,CAAEK,KAAF,EAASC,KAAT,CAAV;AACA;AACD,GANgC,CAAjC;AAQA,SACC,cAAC,kBAAD;AAAoB,kBAAaL;AAAjC,KAA8CG,gBAAgB,EAA9D,GACC,cAAC,OAAD;AAAS,IAAA,IAAI,EAAGH;AAAhB,KACC,cAAC,WAAD;AACC,IAAA,SAAS,EAAC,qCADX;AAEC,IAAA,cAAc,MAFf;AAGC,IAAA,OAAO,EAAGL,OAHX;AAIC,IAAA,MAAM,EAAGC,MAJV;AAKC,IAAA,MAAM,EAAGC,MALV;AAMC,IAAA,oBAAoB,MANrB;AAOC,IAAA,eAAe,MAPhB;AAQC,IAAA,wBAAwB,EAAG,KAR5B;AASC,IAAA,KAAK,EAAGI;AATT,KAUMC,KAVN,EADD,CADD,CADD;AAkBA;;AAED,SAASK,OAAT,QAAuC;AAAA,MAAnBC,QAAmB,SAAnBA,QAAmB;AAAA,MAATC,IAAS,SAATA,IAAS;AACtC,MAAK,CAAEA,IAAP,EAAc,OAAOD,QAAP;AAEd,SACC,cAAC,WAAD;AAAa,IAAA,IAAI,EAAGC,IAApB;AAA2B,IAAA,QAAQ,EAAC;AAApC,KACGD,QADH,CADD;AAKA","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport { useHover } from 'react-use-gesture';\n\n/**\n * Internal dependencies\n */\nimport BaseTooltip from '../tooltip';\nimport { UnitControlWrapper, UnitControl } from './styles/box-control-styles';\n\nexport default function BoxUnitControl( {\n\tisFirst,\n\tisLast,\n\tisOnly,\n\tonHoverOn = noop,\n\tonHoverOff = noop,\n\tlabel,\n\tvalue,\n\t...props\n} ) {\n\tconst bindHoverGesture = useHover( ( { event, ...state } ) => {\n\t\tif ( state.hovering ) {\n\t\t\tonHoverOn( event, state );\n\t\t} else {\n\t\t\tonHoverOff( event, state );\n\t\t}\n\t} );\n\n\treturn (\n\t\t<UnitControlWrapper aria-label={ label } { ...bindHoverGesture() }>\n\t\t\t<Tooltip text={ label }>\n\t\t\t\t<UnitControl\n\t\t\t\t\tclassName=\"component-box-control__unit-control\"\n\t\t\t\t\thideHTMLArrows\n\t\t\t\t\tisFirst={ isFirst }\n\t\t\t\t\tisLast={ isLast }\n\t\t\t\t\tisOnly={ isOnly }\n\t\t\t\t\tisPressEnterToChange\n\t\t\t\t\tisFloatingLabel\n\t\t\t\t\tisResetValueOnUnitChange={ false }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\t{ ...props }\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t</UnitControlWrapper>\n\t);\n}\n\nfunction Tooltip( { children, text } ) {\n\tif ( ! text ) return children;\n\n\treturn (\n\t\t<BaseTooltip text={ text } position=\"top\">\n\t\t\t{ children }\n\t\t</BaseTooltip>\n\t);\n}\n"]}