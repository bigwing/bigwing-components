{"version":3,"sources":["@wordpress/components/src/box-control/index.js"],"names":["noop","useInstanceId","useState","__","Button","FlexItem","FlexBlock","AllInputControl","InputControls","BoxControlIcon","Text","LinkedButton","Visualizer","Root","Header","HeaderControlWrapper","DEFAULT_VALUES","DEFAULT_VISUALIZER_VALUES","isValuesMixed","isValuesDefined","useControlledState","defaultInputProps","min","useUniqueId","idProp","instanceId","BoxControl","id","inputProps","onChange","onChangeShowVisualizer","label","valuesProp","values","units","setValues","inputValues","hasInitialValue","isDirty","setIsDirty","isLinked","setIsLinked","side","setSide","headingId","toggleLinked","handleOnFocus","event","nextSide","handleOnChange","nextValues","handleOnHoverOn","next","handleOnHoverOff","handleOnReset","initialValues","inputControlProps","onFocus","onHoverOn","onHoverOff","__Visualizer"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Button from '../button';\nimport { FlexItem, FlexBlock } from '../flex';\nimport AllInputControl from './all-input-control';\nimport InputControls from './input-controls';\nimport BoxControlIcon from './icon';\nimport Text from '../text';\nimport LinkedButton from './linked-button';\nimport Visualizer from './visualizer';\nimport {\n\tRoot,\n\tHeader,\n\tHeaderControlWrapper,\n} from './styles/box-control-styles';\nimport {\n\tDEFAULT_VALUES,\n\tDEFAULT_VISUALIZER_VALUES,\n\tisValuesMixed,\n\tisValuesDefined,\n} from './utils';\nimport { useControlledState } from '../utils/hooks';\n\nconst defaultInputProps = {\n\tmin: 0,\n};\n\nfunction useUniqueId( idProp ) {\n\tconst instanceId = useInstanceId( BoxControl, 'inspector-box-control' );\n\n\treturn idProp || instanceId;\n}\nexport default function BoxControl( {\n\tid: idProp,\n\tinputProps = defaultInputProps,\n\tonChange = noop,\n\tonChangeShowVisualizer = noop,\n\tlabel = __( 'Box Control' ),\n\tvalues: valuesProp,\n\tunits,\n} ) {\n\tconst [ values, setValues ] = useControlledState( valuesProp );\n\tconst inputValues = values || DEFAULT_VALUES;\n\tconst hasInitialValue = isValuesDefined( valuesProp );\n\n\tconst [ isDirty, setIsDirty ] = useState( hasInitialValue );\n\tconst [ isLinked, setIsLinked ] = useState(\n\t\t! hasInitialValue || ! isValuesMixed( inputValues )\n\t);\n\n\tconst [ side, setSide ] = useState( isLinked ? 'all' : 'top' );\n\n\tconst id = useUniqueId( idProp );\n\tconst headingId = `${ id }-heading`;\n\n\tconst toggleLinked = () => {\n\t\tsetIsLinked( ! isLinked );\n\t\tsetSide( ! isLinked ? 'all' : 'top' );\n\t};\n\n\tconst handleOnFocus = ( event, { side: nextSide } ) => {\n\t\tsetSide( nextSide );\n\t};\n\n\tconst handleOnChange = ( nextValues ) => {\n\t\tonChange( nextValues );\n\t\tsetValues( nextValues );\n\t\tsetIsDirty( true );\n\t};\n\n\tconst handleOnHoverOn = ( next = {} ) => {\n\t\tonChangeShowVisualizer( { ...DEFAULT_VISUALIZER_VALUES, ...next } );\n\t};\n\n\tconst handleOnHoverOff = ( next = {} ) => {\n\t\tonChangeShowVisualizer( { ...DEFAULT_VISUALIZER_VALUES, ...next } );\n\t};\n\n\tconst handleOnReset = () => {\n\t\tconst initialValues = DEFAULT_VALUES;\n\n\t\tonChange( initialValues );\n\t\tsetValues( initialValues );\n\t\tsetIsDirty( false );\n\t};\n\n\tconst inputControlProps = {\n\t\t...inputProps,\n\t\tonChange: handleOnChange,\n\t\tonFocus: handleOnFocus,\n\t\tonHoverOn: handleOnHoverOn,\n\t\tonHoverOff: handleOnHoverOff,\n\t\tisLinked,\n\t\tunits,\n\t\tvalues: inputValues,\n\t};\n\n\treturn (\n\t\t<Root id={ id } role=\"region\" aria-labelledby={ headingId }>\n\t\t\t<Header className=\"component-box-control__header\">\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tid={ headingId }\n\t\t\t\t\t\tclassName=\"component-box-control__label\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</Text>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"component-box-control__reset-button\"\n\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\tisSmall\n\t\t\t\t\t\tonClick={ handleOnReset }\n\t\t\t\t\t\tdisabled={ ! isDirty }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexItem>\n\t\t\t</Header>\n\t\t\t<HeaderControlWrapper className=\"component-box-control__header-control-wrapper\">\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<BoxControlIcon side={ side } />\n\t\t\t\t</FlexItem>\n\t\t\t\t{ isLinked && (\n\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t<AllInputControl { ...inputControlProps } />\n\t\t\t\t\t</FlexBlock>\n\t\t\t\t) }\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<LinkedButton\n\t\t\t\t\t\tonClick={ toggleLinked }\n\t\t\t\t\t\tisLinked={ isLinked }\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t</HeaderControlWrapper>\n\t\t\t{ ! isLinked && <InputControls { ...inputControlProps } /> }\n\t\t</Root>\n\t);\n}\n\nBoxControl.__Visualizer = Visualizer;\n"]}