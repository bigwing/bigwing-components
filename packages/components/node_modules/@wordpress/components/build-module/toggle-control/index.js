import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { isFunction } from 'lodash';
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { useInstanceId } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import FormToggle from '../form-toggle';
import BaseControl from '../base-control';
export default function ToggleControl(_ref) {
  var label = _ref.label,
      checked = _ref.checked,
      help = _ref.help,
      className = _ref.className,
      onChange = _ref.onChange;

  function onChangeToggle(event) {
    onChange(event.target.checked);
  }

  var instanceId = useInstanceId(ToggleControl);
  var id = "inspector-toggle-control-".concat(instanceId);
  var describedBy, helpLabel;

  if (help) {
    describedBy = id + '__help';
    helpLabel = isFunction(help) ? help(checked) : help;
  }

  return createElement(BaseControl, {
    id: id,
    help: helpLabel,
    className: classnames('components-toggle-control', className)
  }, createElement(FormToggle, {
    id: id,
    checked: checked,
    onChange: onChangeToggle,
    "aria-describedby": describedBy
  }), createElement("label", {
    htmlFor: id,
    className: "components-toggle-control__label"
  }, label));
}
//# sourceMappingURL=index.js.map