{"version":3,"sources":["@wordpress/components/src/dropdown/index.js"],"names":["classnames","useRef","useEffect","useState","Popover","useObservableState","initialState","onStateChange","state","setState","value","Dropdown","renderContent","renderToggle","position","className","contentClassName","expandOnMobile","headerTitle","focusOnMount","popoverProps","onClose","onToggle","containerRef","isOpen","setIsOpen","toggle","closeIfFocusOutside","current","contains","document","activeElement","closest","close","args","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Popover from '../popover';\n\nfunction useObservableState( initialState, onStateChange ) {\n\tconst [ state, setState ] = useState( initialState );\n\treturn [\n\t\tstate,\n\t\t( value ) => {\n\t\t\tsetState( value );\n\t\t\tif ( onStateChange ) {\n\t\t\t\tonStateChange( value );\n\t\t\t}\n\t\t},\n\t];\n}\n\nexport default function Dropdown( {\n\trenderContent,\n\trenderToggle,\n\tposition = 'bottom right',\n\tclassName,\n\tcontentClassName,\n\texpandOnMobile,\n\theaderTitle,\n\tfocusOnMount,\n\tpopoverProps,\n\tonClose,\n\tonToggle,\n} ) {\n\tconst containerRef = useRef();\n\tconst [ isOpen, setIsOpen ] = useObservableState( false, onToggle );\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tif ( onToggle ) {\n\t\t\t\tonToggle( false );\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tfunction toggle() {\n\t\tsetIsOpen( ! isOpen );\n\t}\n\n\t/**\n\t * Closes the dropdown if a focus leaves the dropdown wrapper. This is\n\t * intentionally distinct from `onClose` since focus loss from the popover\n\t * is expected to occur when using the Dropdown's toggle button, in which\n\t * case the correct behavior is to keep the dropdown closed. The same applies\n\t * in case when focus is moved to the modal dialog.\n\t */\n\tfunction closeIfFocusOutside() {\n\t\tif (\n\t\t\t! containerRef.current.contains( document.activeElement ) &&\n\t\t\t! document.activeElement.closest( '[role=\"dialog\"]' )\n\t\t) {\n\t\t\tclose();\n\t\t}\n\t}\n\n\tfunction close() {\n\t\tif ( onClose ) {\n\t\t\tonClose();\n\t\t}\n\t\tsetIsOpen( false );\n\t}\n\n\tconst args = { isOpen, onToggle: toggle, onClose: close };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ classnames( 'components-dropdown', className ) }\n\t\t\tref={ containerRef }\n\t\t>\n\t\t\t{ renderToggle( args ) }\n\t\t\t{ isOpen && (\n\t\t\t\t<Popover\n\t\t\t\t\tposition={ position }\n\t\t\t\t\tonClose={ close }\n\t\t\t\t\tonFocusOutside={ closeIfFocusOutside }\n\t\t\t\t\texpandOnMobile={ expandOnMobile }\n\t\t\t\t\theaderTitle={ headerTitle }\n\t\t\t\t\tfocusOnMount={ focusOnMount }\n\t\t\t\t\t{ ...popoverProps }\n\t\t\t\t\tanchorRef={ containerRef.current }\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'components-dropdown__content',\n\t\t\t\t\t\tpopoverProps ? popoverProps.className : undefined,\n\t\t\t\t\t\tcontentClassName\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ renderContent( args ) }\n\t\t\t\t</Popover>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n"]}