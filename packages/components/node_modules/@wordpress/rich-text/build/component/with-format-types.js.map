{"version":3,"sources":["@wordpress/rich-text/src/component/with-format-types.js"],"names":["formatTypesSelector","select","getFormatTypes","withFormatTypes","RichText","WithFormatTypes","props","clientId","identifier","formatTypes","selectProps","reduce","acc","settings","__experimentalGetPropsForEditableTreePreparation","selectPrefix","name","richTextIdentifier","blockClientId","value","key","dispatchProps","dispatch","__experimentalGetPropsForEditableTreeChangeHandler","dispatchPrefix","newProps","__experimentalCreatePrepareEditableTree","args","combined","propsByPrefix","Object","keys","accumulator","startsWith","slice","length","__experimentalCreateOnChangeEditableValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { mapKeys } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect, __unstableUseDispatchWithMap } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\nfunction formatTypesSelector( select ) {\n\treturn select( 'core/rich-text' ).getFormatTypes();\n}\n\n/**\n * This higher-order component provides RichText with the `formatTypes` prop\n * and its derived props from experimental format type settings.\n *\n * @param {WPComponent} RichText The rich text component to add props for.\n *\n * @return {WPComponent} New enhanced component.\n */\nexport default function withFormatTypes( RichText ) {\n\treturn function WithFormatTypes( props ) {\n\t\tconst { clientId, identifier } = props;\n\t\tconst formatTypes = useSelect( formatTypesSelector, [] );\n\t\tconst selectProps = useSelect(\n\t\t\t( select ) => {\n\t\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! settings.__experimentalGetPropsForEditableTreePreparation\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selectPrefix = `format_prepare_props_(${ settings.name })_`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t...mapKeys(\n\t\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreePreparation(\n\t\t\t\t\t\t\t\tselect,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t( value, key ) => selectPrefix + key\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t},\n\t\t\t[ formatTypes, clientId, identifier ]\n\t\t);\n\t\tconst dispatchProps = __unstableUseDispatchWithMap(\n\t\t\t( dispatch ) => {\n\t\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! settings.__experimentalGetPropsForEditableTreeChangeHandler\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst dispatchPrefix = `format_on_change_props_(${ settings.name })_`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t...mapKeys(\n\t\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreeChangeHandler(\n\t\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t( value, key ) => dispatchPrefix + key\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t},\n\t\t\t[ formatTypes, clientId, identifier ]\n\t\t);\n\t\tconst newProps = useMemo( () => {\n\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\tif ( ! settings.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\tconst args = {\n\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t};\n\t\t\t\tconst combined = {\n\t\t\t\t\t...selectProps,\n\t\t\t\t\t...dispatchProps,\n\t\t\t\t};\n\n\t\t\t\tconst { name } = settings;\n\t\t\t\tconst selectPrefix = `format_prepare_props_(${ name })_`;\n\t\t\t\tconst dispatchPrefix = `format_on_change_props_(${ name })_`;\n\t\t\t\tconst propsByPrefix = Object.keys( combined ).reduce(\n\t\t\t\t\t( accumulator, key ) => {\n\t\t\t\t\t\tif ( key.startsWith( selectPrefix ) ) {\n\t\t\t\t\t\t\taccumulator[ key.slice( selectPrefix.length ) ] =\n\t\t\t\t\t\t\t\tcombined[ key ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( key.startsWith( dispatchPrefix ) ) {\n\t\t\t\t\t\t\taccumulator[ key.slice( dispatchPrefix.length ) ] =\n\t\t\t\t\t\t\t\tcombined[ key ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t);\n\n\t\t\t\tif ( settings.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t[ `format_value_functions_(${ name })` ]: settings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[ `format_on_change_functions_(${ name })` ]: settings.__experimentalCreateOnChangeEditableValue(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...acc,\n\t\t\t\t\t[ `format_prepare_functions_(${ name })` ]: settings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\targs\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}, {} );\n\t\t}, [ formatTypes, clientId, identifier, selectProps, dispatchProps ] );\n\n\t\treturn (\n\t\t\t<RichText\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...selectProps }\n\t\t\t\t{ ...newProps }\n\t\t\t\tformatTypes={ formatTypes }\n\t\t\t/>\n\t\t);\n\t};\n}\n"]}