{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["INSERTION_INPUT_TYPES_TO_IGNORE","Set","whiteSpace","defaultStyle","EMPTY_ACTIVE_FORMATS","createPrepareEditableTree","props","prefix","fns","Object","keys","reduce","accumulator","key","startsWith","push","value","fn","text","formats","fixPlaceholderSelection","defaultView","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","tagName","TagName","selectionStart","selectionEnd","children","allowedFormats","withoutInteractiveFormatting","formatTypes","style","className","placeholder","disabled","preserveWhiteSpace","onPaste","format","onDelete","onEnter","onSelectionChange","onChange","onFocus","unstableOnFocus","setFocusedElement","instanceId","multilineTag","__unstableMultilineTag","multilineRootTag","__unstableMultilineRootTag","disableFormats","__unstableDisableFormats","didAutomaticChange","__unstableDidAutomaticChange","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","allowPrefixTransformations","__unstableAllowPrefixTransformations","undo","__unstableUndo","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","onCreateUndoLevel","__unstableOnCreateUndoLevel","isSelected","__unstableIsSelected","ref","forwardedRef","remainingProps","activeFormats","setActiveFormats","getDoc","current","ownerDocument","getWin","formatToValue","string","Array","length","replacements","prepare","result","html","multilineWrapperTags","undefined","removeEditorOnlyFormats","val","forEach","formatType","__experimentalCreatePrepareEditableTree","name","valueToFormat","_value","record","initialRecord","start","end","createRecord","range","rangeCount","getRangeAt","element","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","handlePaste","event","preventDefault","clipboardData","items","files","plainText","getData","error1","error2","window","console","log","handleChange","transformed","accumlator","__unstablePasteRule","from","item","getAsFile","file","type","size","handleDelete","keyCode","DELETE","BACKSPACE","ESCAPE","currentValue","isReverse","newValue","handleEnter","ENTER","shiftKey","handleSpace","altKey","metaKey","ctrlKey","SPACE","characterBefore","LINE_SEPARATOR","handleHorizontalNavigation","LEFT","RIGHT","currentActiveFormats","collapsed","getComputedStyle","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","slice","newPos","handleKeyDown","defaultPrevented","lastHistoryValue","createUndoLevel","isComposing","timeout","handleInput","inputType","nativeEvent","indexOf","has","oldActiveFormats","change","withoutHistory","clearTimeout","setTimeout","handleCompositionStart","removeEventListener","handleSelectionChange","handleCompositionEnd","addEventListener","didMount","document","activeElement","oldRecord","changeHandlers","v","values","changeHandler","handlePointerDown","target","textContent","parentNode","index","createRange","setStart","setEnd","removeAllRanges","addRange","rafId","handleFocus","requestAnimationFrame","alternative","handleBlur","applyFromProps","predicate","prepareProps","cancelAnimationFrame","focus","ariaProps","editableProps","role","onInput","onCompositionStart","onCompositionEnd","onKeyDown","onBlur","onMouseDown","onTouchStart","onKeyUp","onMouseUp","onTouchEnd","contentEditable","suppressContentEditableWarning","editableTagName","RichTextWrapper"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { find, isNil, pickBy, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tforwardRef,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tuseMemo,\n\tuseLayoutEffect,\n} from '@wordpress/element';\nimport {\n\tBACKSPACE,\n\tDELETE,\n\tENTER,\n\tLEFT,\n\tRIGHT,\n\tSPACE,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\nimport withFormatTypes from './with-format-types';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useInlineWarning } from './use-inline-warning';\nimport { insert } from '../insert';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * Default style object for the editable element.\n *\n * @type {Object<string,string>}\n */\nconst defaultStyle = { whiteSpace };\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) =>\n\t\tfns.reduce( ( accumulator, fn ) => {\n\t\t\treturn fn( accumulator, value.text );\n\t\t}, value.formats );\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nfunction RichText( {\n\ttagName: TagName = 'div',\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tchildren,\n\tallowedFormats,\n\twithoutInteractiveFormatting,\n\tformatTypes,\n\tstyle,\n\tclassName,\n\tplaceholder,\n\tdisabled,\n\tpreserveWhiteSpace,\n\tonPaste,\n\tformat = 'string',\n\tonDelete,\n\tonEnter,\n\tonSelectionChange,\n\tonChange,\n\tunstableOnFocus: onFocus,\n\tsetFocusedElement,\n\tinstanceId,\n\t__unstableMultilineTag: multilineTag,\n\t__unstableMultilineRootTag: multilineRootTag,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableDidAutomaticChange: didAutomaticChange,\n\t__unstableInputRule: inputRule,\n\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t__unstableAllowPrefixTransformations: allowPrefixTransformations,\n\t__unstableUndo: undo,\n\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t__unstableOnExitFormattedText: onExitFormattedText,\n\t__unstableOnCreateUndoLevel: onCreateUndoLevel,\n\t__unstableIsSelected: isSelected,\n\tforwardedRef: ref,\n\t...remainingProps\n} ) {\n\tconst [ activeFormats = [], setActiveFormats ] = useState();\n\n\t// For backward compatibility, fall back to tagName if it's a string.\n\t// tagName can now be a component for light blocks.\n\tif ( ! multilineRootTag && typeof TagName === 'string' ) {\n\t\tmultilineRootTag = TagName;\n\t}\n\n\tfunction getDoc() {\n\t\treturn ref.current.ownerDocument;\n\t}\n\n\tfunction getWin() {\n\t\treturn getDoc().defaultView;\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} string The outside value, data type depends on props.\n\t *\n\t * @return {Object} An internal rich-text value.\n\t */\n\tfunction formatToValue( string ) {\n\t\tif ( disableFormats ) {\n\t\t\treturn {\n\t\t\t\ttext: string,\n\t\t\t\tformats: Array( string.length ),\n\t\t\t\treplacements: Array( string.length ),\n\t\t\t};\n\t\t}\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn string;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree(\n\t\t\tremainingProps,\n\t\t\t'format_value_functions'\n\t\t);\n\n\t\tconst result = create( {\n\t\t\thtml: string,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tresult.formats = prepare( result );\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} val The internal rich-text value.\n\t *\n\t * @return {Object} A new rich-text value.\n\t */\n\tfunction removeEditorOnlyFormats( val ) {\n\t\tformatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tval = removeFormat( val, formatType.name, 0, val.text.length );\n\t\t\t}\n\t\t} );\n\n\t\treturn val;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} val The internal rich-text value.\n\t *\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tfunction valueToFormat( val ) {\n\t\tif ( disableFormats ) {\n\t\t\treturn val.text;\n\t\t}\n\n\t\tval = removeEditorOnlyFormats( val );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value: val, multilineTag, preserveWhiteSpace } );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef(\n\t\tuseMemo( () => {\n\t\t\tconst initialRecord = formatToValue( value );\n\t\t\tinitialRecord.start = selectionStart;\n\t\t\tinitialRecord.end = selectionEnd;\n\t\t\treturn initialRecord;\n\t\t}, [] )\n\t);\n\n\tfunction createRecord() {\n\t\tconst selection = getWin().getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree(\n\t\t\t\tremainingProps,\n\t\t\t\t'format_prepare_functions'\n\t\t\t),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {ClipboardEvent} event The paste event.\n\t */\n\tfunction handlePaste( event ) {\n\t\tif ( ! isSelected ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tif ( disableFormats ) {\n\t\t\thandleChange( insert( record.current, plainText ) );\n\t\t\treturn;\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstablePasteRule } ) => {\n\t\t\t\t// Only allow one transform.\n\t\t\t\tif ( __unstablePasteRule && accumlator === record.current ) {\n\t\t\t\t\taccumlator = __unstablePasteRule( record.current, {\n\t\t\t\t\t\thtml,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\trecord.current\n\t\t);\n\n\t\tif ( transformed !== record.current ) {\n\t\t\thandleChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tfiles = Array.from( files );\n\n\t\t\tArray.from( items ).forEach( ( item ) => {\n\t\t\t\tif ( ! item.getAsFile ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst file = item.getAsFile();\n\n\t\t\t\tif ( ! file ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { name, type, size } = file;\n\n\t\t\t\tif ( ! find( files, { name, type, size } ) ) {\n\t\t\t\t\tfiles.push( file );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: removeEditorOnlyFormats( record.current ),\n\t\t\t\tonChange: handleChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\tfiles,\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\tkeyCode !== DELETE &&\n\t\t\tkeyCode !== BACKSPACE &&\n\t\t\tkeyCode !== ESCAPE\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( didAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tundo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, end, text } = currentValue;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\thandleChange( remove( currentValue ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet newValue;\n\n\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentValue.start === 0 &&\n\t\t\t\tcurrentValue.end === 0 &&\n\t\t\t\tisEmptyLine( currentValue )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( currentValue, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( currentValue, isReverse );\n\t\t\t}\n\n\t\t\tif ( newValue ) {\n\t\t\t\thandleChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( currentValue ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value: currentValue } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: removeEditorOnlyFormats( createRecord() ),\n\t\t\tonChange: handleChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\tkeyCode !== SPACE ||\n\t\t\tmultilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\n\t\tif ( ! isCollapsed( currentValue ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = currentValue;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleChange(\n\t\t\tindentListItems( currentValue, { type: multilineRootTag } )\n\t\t);\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\ttext,\n\t\t\tformats,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t} = record.current;\n\t\tconst collapsed = isCollapsed( record.current );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getWin().getComputedStyle( ref.current );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif (\n\t\t\t\t! isReverse &&\n\t\t\t\tcurrentActiveFormats.length < formatsAfter.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentActiveFormats.length > formatsBefore.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif (\n\t\t\t\t! isReverse &&\n\t\t\t\tcurrentActiveFormats.length > formatsAfter.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentActiveFormats.length < formatsBefore.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\tif ( newActiveFormatsLength !== currentActiveFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tsetActiveFormats( newActiveFormats );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...record.current,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue );\n\t\tonSelectionChange( newPos, newPos );\n\t\tsetActiveFormats( newActiveFormats );\n\t}\n\n\tfunction handleKeyDown( event ) {\n\t\tif ( event.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleDelete( event );\n\t\thandleEnter( event );\n\t\thandleSpace( event );\n\t\thandleHorizontalNavigation( event );\n\t}\n\n\tconst lastHistoryValue = useRef( value );\n\n\tfunction createUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( lastHistoryValue.current === _value.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateUndoLevel();\n\t\tlastHistoryValue.current = _value.current;\n\t}\n\n\tconst isComposing = useRef( false );\n\tconst timeout = useRef();\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic input event.\n\t */\n\tfunction handleInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed.\n\t\t// As of December 2019, Safari doesn't support nativeEvent.isComposing.\n\t\tif ( isComposing.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType && event && event.nativeEvent ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tapplyRecord( record.current );\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, activeFormats: oldActiveFormats = [] } = record.current;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue: currentValue,\n\t\t\tstart,\n\t\t\tend: currentValue.start,\n\t\t\tformats: oldActiveFormats,\n\t\t} );\n\n\t\thandleChange( change, { withoutHistory: true } );\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tgetWin().clearTimeout( timeout.current );\n\t\ttimeout.current = getWin().setTimeout( createUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowPrefixTransformations && inputRule ) {\n\t\t\tinputRule( change, valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstableInputRule } ) => {\n\t\t\t\tif ( __unstableInputRule ) {\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\tchange\n\t\t);\n\n\t\tif ( transformed !== change ) {\n\t\t\tcreateUndoLevel();\n\t\t\thandleChange( { ...transformed, activeFormats: oldActiveFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tfunction handleCompositionStart() {\n\t\tisComposing.current = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might distroy internal browser\n\t\t// editing state.\n\t\tgetDoc().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction handleCompositionEnd() {\n\t\tisComposing.current = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\thandleInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tgetDoc().addEventListener( 'selectionchange', handleSelectionChange );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|WPSyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tfunction handleSelectionChange( event ) {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( document.activeElement !== ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( event.type !== 'selectionchange' && ! isSelected ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( isComposing.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = createRecord();\n\t\tconst oldRecord = record.current;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== oldRecord.text ) {\n\t\t\thandleInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( getWin() );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = {\n\t\t\t...oldRecord,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst newActiveFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && newActiveFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! newActiveFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue, { domOnly: true } );\n\t\tonSelectionChange( start, end );\n\t\tsetActiveFormats( newActiveFormats );\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  newRecord         The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tfunction handleChange( newRecord, { withoutHistory } = {} ) {\n\t\tif ( disableFormats ) {\n\t\t\tnewRecord.formats = Array( newRecord.text.length );\n\t\t\tnewRecord.replacements = Array( newRecord.text.length );\n\t\t}\n\n\t\tapplyRecord( newRecord );\n\n\t\tconst { start, end, activeFormats: newActiveFormats = [] } = newRecord;\n\t\tconst changeHandlers = pickBy( remainingProps, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( newRecord.formats, newRecord.text );\n\t\t} );\n\n\t\t_value.current = valueToFormat( newRecord );\n\t\trecord.current = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tonSelectionChange( start, end );\n\t\tonChange( _value.current );\n\t\tsetActiveFormats( newActiveFormats );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tcreateUndoLevel();\n\t\t}\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tfunction handlePointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif ( target === ref.current || target.textContent ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = getDoc().createRange();\n\t\tconst selection = getWin().getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tconst rafId = useRef();\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tfunction handleFocus() {\n\t\tif ( onFocus ) {\n\t\t\tonFocus();\n\t\t}\n\n\t\tif ( ! isSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t// event.\n\t\t\tconst index = undefined;\n\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t};\n\t\t\tonSelectionChange( index, index );\n\t\t\tsetActiveFormats( EMPTY_ACTIVE_FORMATS );\n\t\t} else {\n\t\t\tonSelectionChange( record.current.start, record.current.end );\n\t\t\tsetActiveFormats(\n\t\t\t\tgetActiveFormats(\n\t\t\t\t\t{\n\t\t\t\t\t\t...record.current,\n\t\t\t\t\t\tactiveFormats: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\trafId.current = getWin().requestAnimationFrame( handleSelectionChange );\n\n\t\tgetDoc().addEventListener( 'selectionchange', handleSelectionChange );\n\n\t\tif ( setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tsetFocusedElement( instanceId );\n\t\t}\n\t}\n\n\tfunction handleBlur() {\n\t\tgetDoc().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction applyFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = formatToValue( value );\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t\tapplyRecord( record.current );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( didMount.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, [ TagName, placeholder ] );\n\n\tuseEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, [ value ] );\n\n\tuseEffect( () => {\n\t\tif ( ! didMount.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tisSelected &&\n\t\t\t( selectionStart !== record.current.start ||\n\t\t\t\tselectionEnd !== record.current.end )\n\t\t) {\n\t\t\tapplyFromProps();\n\t\t} else {\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}, [ selectionStart, selectionEnd, isSelected ] );\n\n\tconst prefix = 'format_prepare_props_';\n\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\tconst prepareProps = pickBy( remainingProps, predicate );\n\n\tuseEffect( () => {\n\t\tif ( didMount.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, Object.values( prepareProps ) );\n\n\tuseLayoutEffect( () => {\n\t\tapplyRecord( record.current, { domOnly: true } );\n\n\t\tdidMount.current = true;\n\n\t\treturn () => {\n\t\t\tgetDoc().removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\tgetWin().cancelAnimationFrame( rafId.current );\n\t\t\tgetWin().clearTimeout( timeout.current );\n\t\t};\n\t}, [] );\n\n\tfunction focus() {\n\t\tref.current.focus();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst ariaProps = pickBy( remainingProps, ( v, key ) =>\n\t\tstartsWith( key, 'aria-' )\n\t);\n\n\tconst editableProps = {\n\t\t// Overridable props.\n\t\trole: 'textbox',\n\t\t'aria-multiline': true,\n\t\t'aria-label': placeholder,\n\t\t...ariaProps,\n\t\tref,\n\t\tstyle: style ? { ...style, whiteSpace } : defaultStyle,\n\t\tclassName: classnames( 'rich-text', className ),\n\t\tonPaste: handlePaste,\n\t\tonInput: handleInput,\n\t\tonCompositionStart: handleCompositionStart,\n\t\tonCompositionEnd: handleCompositionEnd,\n\t\tonKeyDown: handleKeyDown,\n\t\tonFocus: handleFocus,\n\t\tonBlur: handleBlur,\n\t\tonMouseDown: handlePointerDown,\n\t\tonTouchStart: handlePointerDown,\n\t\t// Selection updates must be done at these events as they\n\t\t// happen before the `selectionchange` event. In some cases,\n\t\t// the `selectionchange` event may not even fire, for\n\t\t// example when the window receives focus again on click.\n\t\tonKeyUp: handleSelectionChange,\n\t\tonMouseUp: handleSelectionChange,\n\t\tonTouchEnd: handleSelectionChange,\n\t\t// Do not set the attribute if disabled.\n\t\tcontentEditable: disabled ? undefined : true,\n\t\tsuppressContentEditableWarning: ! disabled,\n\t};\n\n\tuseBoundaryStyle( { ref, activeFormats } );\n\tuseInlineWarning( { ref } );\n\n\treturn (\n\t\t<>\n\t\t\t{ isSelected && (\n\t\t\t\t<FormatEdit\n\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\twithoutInteractiveFormatting={\n\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t}\n\t\t\t\t\tvalue={ record.current }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tonFocus={ focus }\n\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ children &&\n\t\t\t\tchildren( {\n\t\t\t\t\tisSelected,\n\t\t\t\t\tvalue: record.current,\n\t\t\t\t\tonChange: handleChange,\n\t\t\t\t\tonFocus: focus,\n\t\t\t\t\teditableProps,\n\t\t\t\t\teditableTagName: TagName,\n\t\t\t\t} ) }\n\t\t\t{ ! children && <TagName { ...editableProps } /> }\n\t\t</>\n\t);\n}\n\nconst RichTextWrapper = withFormatTypes( RichText );\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default forwardRef( ( props, ref ) => {\n\treturn <RichTextWrapper { ...props } forwardedRef={ ref } />;\n} );\n"]}