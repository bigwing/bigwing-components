{"version":3,"sources":["@wordpress/data/src/registry.js"],"names":["createRegistry","storeConfigs","parent","stores","listeners","globalListener","forEach","listener","subscribe","push","select","reducerKey","store","getSelectors","getResolveSelectors","selectors","selector","selectorName","args","Promise","resolve","hasFinished","hasFinishedResolution","getResult","apply","result","unsubscribe","maxSize","__experimentalResolveSelect","dispatch","getActions","withPlugins","attributes","attribute","key","registry","arguments","registerGenericStore","config","TypeError","namespaces","use","registerStore","options","reducer","namespace","plugin","Object","entries","name"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { omit, without, mapValues } from 'lodash';\nimport memize from 'memize';\n\n/**\n * Internal dependencies\n */\nimport createNamespace from './namespace-store';\nimport createCoreDataStore from './store';\n\n/**\n * @typedef {Object} WPDataRegistry An isolated orchestrator of store registrations.\n *\n * @property {Function} registerGenericStore Given a namespace key and settings\n *                                           object, registers a new generic\n *                                           store.\n * @property {Function} registerStore        Given a namespace key and settings\n *                                           object, registers a new namespace\n *                                           store.\n * @property {Function} subscribe            Given a function callback, invokes\n *                                           the callback on any change to state\n *                                           within any registered store.\n * @property {Function} select               Given a namespace key, returns an\n *                                           object of the  store's registered\n *                                           selectors.\n * @property {Function} dispatch             Given a namespace key, returns an\n *                                           object of the store's registered\n *                                           action dispatchers.\n */\n\n/**\n * @typedef {Object} WPDataPlugin An object of registry function overrides.\n *\n * @property {Function} registerStore registers store.\n */\n\n/**\n * Creates a new store registry, given an optional object of initial store\n * configurations.\n *\n * @param {Object}  storeConfigs Initial store configurations.\n * @param {Object?} parent       Parent registry.\n *\n * @return {WPDataRegistry} Data registry.\n */\nexport function createRegistry( storeConfigs = {}, parent = null ) {\n\tconst stores = {};\n\tlet listeners = [];\n\n\t/**\n\t * Global listener called for each store's update.\n\t */\n\tfunction globalListener() {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t}\n\n\t/**\n\t * Subscribe to changes to any data.\n\t *\n\t * @param {Function}   listener Listener function.\n\t *\n\t * @return {Function}           Unsubscribe function.\n\t */\n\tconst subscribe = ( listener ) => {\n\t\tlisteners.push( listener );\n\n\t\treturn () => {\n\t\t\tlisteners = without( listeners, listener );\n\t\t};\n\t};\n\n\t/**\n\t * Calls a selector given the current state and extra arguments.\n\t *\n\t * @param {string} reducerKey Part of the state shape to register the\n\t *                            selectors for.\n\t *\n\t * @return {*} The selector's returned value.\n\t */\n\tfunction select( reducerKey ) {\n\t\tconst store = stores[ reducerKey ];\n\t\tif ( store ) {\n\t\t\treturn store.getSelectors();\n\t\t}\n\n\t\treturn parent && parent.select( reducerKey );\n\t}\n\n\tconst getResolveSelectors = memize(\n\t\t( selectors ) => {\n\t\t\treturn mapValues(\n\t\t\t\tomit( selectors, [\n\t\t\t\t\t'getIsResolving',\n\t\t\t\t\t'hasStartedResolution',\n\t\t\t\t\t'hasFinishedResolution',\n\t\t\t\t\t'isResolving',\n\t\t\t\t\t'getCachedResolvers',\n\t\t\t\t] ),\n\t\t\t\t( selector, selectorName ) => {\n\t\t\t\t\treturn ( ...args ) => {\n\t\t\t\t\t\treturn new Promise( ( resolve ) => {\n\t\t\t\t\t\t\tconst hasFinished = () =>\n\t\t\t\t\t\t\t\tselectors.hasFinishedResolution(\n\t\t\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\t\t\targs\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst getResult = () =>\n\t\t\t\t\t\t\t\tselector.apply( null, args );\n\n\t\t\t\t\t\t\t// trigger the selector (to trigger the resolver)\n\t\t\t\t\t\t\tconst result = getResult();\n\t\t\t\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\t\t\t\treturn resolve( result );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst unsubscribe = subscribe( () => {\n\t\t\t\t\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\t\t\t\tresolve( getResult() );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t{ maxSize: 1 }\n\t);\n\n\t/**\n\t * Given the name of a registered store, returns an object containing the store's\n\t * selectors pre-bound to state so that you only need to supply additional arguments,\n\t * and modified so that they return promises that resolve to their eventual values,\n\t * after any resolvers have ran.\n\t *\n\t * @param {string} reducerKey Part of the state shape to register the\n\t *                            selectors for.\n\t *\n\t * @return {Object} Each key of the object matches the name of a selector.\n\t */\n\tfunction __experimentalResolveSelect( reducerKey ) {\n\t\treturn getResolveSelectors( select( reducerKey ) );\n\t}\n\n\t/**\n\t * Returns the available actions for a part of the state.\n\t *\n\t * @param {string} reducerKey Part of the state shape to dispatch the\n\t *                            action for.\n\t *\n\t * @return {*} The action's returned value.\n\t */\n\tfunction dispatch( reducerKey ) {\n\t\tconst store = stores[ reducerKey ];\n\t\tif ( store ) {\n\t\t\treturn store.getActions();\n\t\t}\n\n\t\treturn parent && parent.dispatch( reducerKey );\n\t}\n\n\t//\n\t// Deprecated\n\t// TODO: Remove this after `use()` is removed.\n\t//\n\tfunction withPlugins( attributes ) {\n\t\treturn mapValues( attributes, ( attribute, key ) => {\n\t\t\tif ( typeof attribute !== 'function' ) {\n\t\t\t\treturn attribute;\n\t\t\t}\n\t\t\treturn function () {\n\t\t\t\treturn registry[ key ].apply( null, arguments );\n\t\t\t};\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a generic store.\n\t *\n\t * @param {string} key    Store registry key.\n\t * @param {Object} config Configuration (getSelectors, getActions, subscribe).\n\t */\n\tfunction registerGenericStore( key, config ) {\n\t\tif ( typeof config.getSelectors !== 'function' ) {\n\t\t\tthrow new TypeError( 'config.getSelectors must be a function' );\n\t\t}\n\t\tif ( typeof config.getActions !== 'function' ) {\n\t\t\tthrow new TypeError( 'config.getActions must be a function' );\n\t\t}\n\t\tif ( typeof config.subscribe !== 'function' ) {\n\t\t\tthrow new TypeError( 'config.subscribe must be a function' );\n\t\t}\n\t\tstores[ key ] = config;\n\t\tconfig.subscribe( globalListener );\n\t}\n\n\tlet registry = {\n\t\tregisterGenericStore,\n\t\tstores,\n\t\tnamespaces: stores, // TODO: Deprecate/remove this.\n\t\tsubscribe,\n\t\tselect,\n\t\t__experimentalResolveSelect,\n\t\tdispatch,\n\t\tuse,\n\t};\n\n\t/**\n\t * Registers a standard `@wordpress/data` store.\n\t *\n\t * @param {string} reducerKey Reducer key.\n\t * @param {Object} options    Store description (reducer, actions, selectors, resolvers).\n\t *\n\t * @return {Object} Registered store object.\n\t */\n\tregistry.registerStore = ( reducerKey, options ) => {\n\t\tif ( ! options.reducer ) {\n\t\t\tthrow new TypeError( 'Must specify store reducer' );\n\t\t}\n\n\t\tconst namespace = createNamespace( reducerKey, options, registry );\n\t\tregisterGenericStore( reducerKey, namespace );\n\t\treturn namespace.store;\n\t};\n\n\t//\n\t// TODO:\n\t// This function will be deprecated as soon as it is no longer internally referenced.\n\t//\n\tfunction use( plugin, options ) {\n\t\tregistry = {\n\t\t\t...registry,\n\t\t\t...plugin( registry, options ),\n\t\t};\n\n\t\treturn registry;\n\t}\n\n\tregisterGenericStore( 'core/data', createCoreDataStore( registry ) );\n\n\tObject.entries( storeConfigs ).forEach( ( [ name, config ] ) =>\n\t\tregistry.registerStore( name, config )\n\t);\n\n\tif ( parent ) {\n\t\tparent.subscribe( globalListener );\n\t}\n\n\treturn withPlugins( registry );\n}\n"]}