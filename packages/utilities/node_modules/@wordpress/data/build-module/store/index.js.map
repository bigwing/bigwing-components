{"version":3,"sources":["@wordpress/data/src/store/index.js"],"names":["createCoreDataStore","registry","getCoreDataSelector","selectorName","reducerKey","args","select","getCoreDataAction","actionName","dispatch","getSelectors","reduce","memo","getActions","subscribe"],"mappings":";;;;;;AAAA,SAASA,mBAAT,CAA8BC,QAA9B,EAAyC;AACxC,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEC,YAAF;AAAA,WAAoB,UAAEC,UAAF,EAA2B;AAAA;;AAAA,wCAAVC,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AAC1E,aAAO,oBAAAJ,QAAQ,CAACK,MAAT,CAAiBF,UAAjB,GAA+BD,YAA/B,0BAAkDE,IAAlD,CAAP;AACA,KAF2B;AAAA,GAA5B;;AAIA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEC,UAAF;AAAA,WAAkB,UAAEJ,UAAF,EAA2B;AAAA;;AAAA,yCAAVC,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AACtE,aAAO,sBAAAJ,QAAQ,CAACQ,QAAT,CAAmBL,UAAnB,GAAiCI,UAAjC,4BAAkDH,IAAlD,CAAP;AACA,KAFyB;AAAA,GAA1B;;AAIA,SAAO;AACNK,IAAAA,YADM,0BACS;AACd,aAAO,CACN,gBADM,EAEN,sBAFM,EAGN,uBAHM,EAIN,aAJM,EAKN,oBALM,EAMLC,MANK,CAON,UAAEC,IAAF,EAAQT,YAAR;AAAA,iCACIS,IADJ,sBAEGT,YAFH,EAEmBD,mBAAmB,CAAEC,YAAF,CAFtC;AAAA,OAPM,EAWN,EAXM,CAAP;AAaA,KAfK;AAiBNU,IAAAA,UAjBM,wBAiBO;AACZ,aAAO,CACN,iBADM,EAEN,kBAFM,EAGN,sBAHM,EAIN,8BAJM,EAKN,sCALM,EAMLF,MANK,CAON,UAAEC,IAAF,EAAQJ,UAAR;AAAA,iCACII,IADJ,sBAEGJ,UAFH,EAEiBD,iBAAiB,CAAEC,UAAF,CAFlC;AAAA,OAPM,EAWN,EAXM,CAAP;AAaA,KA/BK;AAiCNM,IAAAA,SAjCM,uBAiCM;AACX;AACA;AACA;AACA;AACA,aAAO,YAAM,CAAE,CAAf;AACA;AAvCK,GAAP;AAyCA;;AAED,eAAed,mBAAf","sourcesContent":["function createCoreDataStore( registry ) {\n\tconst getCoreDataSelector = ( selectorName ) => ( reducerKey, ...args ) => {\n\t\treturn registry.select( reducerKey )[ selectorName ]( ...args );\n\t};\n\n\tconst getCoreDataAction = ( actionName ) => ( reducerKey, ...args ) => {\n\t\treturn registry.dispatch( reducerKey )[ actionName ]( ...args );\n\t};\n\n\treturn {\n\t\tgetSelectors() {\n\t\t\treturn [\n\t\t\t\t'getIsResolving',\n\t\t\t\t'hasStartedResolution',\n\t\t\t\t'hasFinishedResolution',\n\t\t\t\t'isResolving',\n\t\t\t\t'getCachedResolvers',\n\t\t\t].reduce(\n\t\t\t\t( memo, selectorName ) => ( {\n\t\t\t\t\t...memo,\n\t\t\t\t\t[ selectorName ]: getCoreDataSelector( selectorName ),\n\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t);\n\t\t},\n\n\t\tgetActions() {\n\t\t\treturn [\n\t\t\t\t'startResolution',\n\t\t\t\t'finishResolution',\n\t\t\t\t'invalidateResolution',\n\t\t\t\t'invalidateResolutionForStore',\n\t\t\t\t'invalidateResolutionForStoreSelector',\n\t\t\t].reduce(\n\t\t\t\t( memo, actionName ) => ( {\n\t\t\t\t\t...memo,\n\t\t\t\t\t[ actionName ]: getCoreDataAction( actionName ),\n\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t);\n\t\t},\n\n\t\tsubscribe() {\n\t\t\t// There's no reasons to trigger any listener when we subscribe to this store\n\t\t\t// because there's no state stored in this store that need to retrigger selectors\n\t\t\t// if a change happens, the corresponding store where the tracking stated live\n\t\t\t// would have already triggered a \"subscribe\" call.\n\t\t\treturn () => {};\n\t\t},\n\t};\n}\n\nexport default createCoreDataStore;\n"]}