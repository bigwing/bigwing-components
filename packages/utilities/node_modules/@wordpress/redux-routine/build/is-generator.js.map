{"version":3,"sources":["@wordpress/redux-routine/src/is-generator.js"],"names":["isGenerator","object","Symbol","iterator","next"],"mappings":";;;;;;;AAAA;;;;;;;;;AASe,SAASA,WAAT,CAAsBC,MAAtB,EAA+B;AAC7C;AACA;AACA,SACC,CAAC,CAAEA,MAAH,IACA,OAAOA,MAAM,CAAEC,MAAM,CAACC,QAAT,CAAb,KAAqC,UADrC,IAEA,OAAOF,MAAM,CAACG,IAAd,KAAuB,UAHxB;AAKA","sourcesContent":["/**\n * Returns true if the given object is a generator, or false otherwise.\n *\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-generator-objects\n *\n * @param {*} object Object to test.\n *\n * @return {boolean} Whether object is a generator.\n */\nexport default function isGenerator( object ) {\n\t// Check that iterator (next) and iterable (Symbol.iterator) interfaces are satisfied.\n\t// These checks seem to be compatible with several generator helpers as well as the native implementation.\n\treturn (\n\t\t!! object &&\n\t\ttypeof object[ Symbol.iterator ] === 'function' &&\n\t\ttypeof object.next === 'function'\n\t);\n}\n"]}