{"version":3,"sources":["@wordpress/compose/src/hooks/use-preferred-color-scheme/index.android.js"],"names":["usePreferredColorScheme","isInitialColorSchemeDark","currentColorScheme","setCurrentColorScheme","isPreferredColorSchemeDark","colorScheme"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AAJA;;;;AASA;;;;;AAKA,SAASA,uBAAT,GAAmC;AAAA,kBACoB,uBACrDC,8CAA2B,MAA3B,GAAoC,OADiB,CADpB;AAAA;AAAA,MAC1BC,kBAD0B;AAAA,MACNC,qBADM;;AAIlC,0BAAW,YAAM;AAChB,0DAA+B,gBAAsC;AAAA,UAAlCC,0BAAkC,QAAlCA,0BAAkC;AACpE,UAAMC,WAAW,GAAGD,0BAA0B,GAAG,MAAH,GAAY,OAA1D;;AACA,UAAKC,WAAW,KAAKH,kBAArB,EAA0C;AACzCC,QAAAA,qBAAqB,CAAEE,WAAF,CAArB;AACA;AACD,KALD;AAMA,GAPD;AAQA,SAAOH,kBAAP;AACA;;eAEcF,uB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n\tsubscribePreferredColorScheme,\n\tisInitialColorSchemeDark,\n} from '@wordpress/react-native-bridge';\n\n/**\n * Returns the color scheme value when it changes. Possible values: [ 'light', 'dark' ]\n *\n * @return {string} return current color scheme.\n */\nfunction usePreferredColorScheme() {\n\tconst [ currentColorScheme, setCurrentColorScheme ] = useState(\n\t\tisInitialColorSchemeDark ? 'dark' : 'light'\n\t);\n\tuseEffect( () => {\n\t\tsubscribePreferredColorScheme( ( { isPreferredColorSchemeDark } ) => {\n\t\t\tconst colorScheme = isPreferredColorSchemeDark ? 'dark' : 'light';\n\t\t\tif ( colorScheme !== currentColorScheme ) {\n\t\t\t\tsetCurrentColorScheme( colorScheme );\n\t\t\t}\n\t\t} );\n\t} );\n\treturn currentColorScheme;\n}\n\nexport default usePreferredColorScheme;\n"]}